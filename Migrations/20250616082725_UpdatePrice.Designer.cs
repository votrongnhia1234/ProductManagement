// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement.Data;

#nullable disable

namespace ProductManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250616082725_UpdatePrice")]
    partial class UpdatePrice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = "3",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductManagement.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ProductManagement.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Laptop, PC, máy tính bảng và phụ kiện",
                            Name = "Laptop & Máy tính",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Smartphone, tablet và phụ kiện di động",
                            Name = "Điện thoại & Tablet",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tai nghe, loa, thiết bị âm thanh",
                            Name = "Âm thanh & Tai nghe",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết bị gaming, console, phụ kiện game",
                            Name = "Gaming & Esports",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Máy ảnh, camera, thiết bị quay phim",
                            Name = "Camera & Quay phim",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Router, modem, thiết bị mạng và WiFi",
                            Name = "Thiết bị mạng",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bàn phím, chuột, màn hình, webcam",
                            Name = "Phụ kiện máy tính",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Smart home, IoT, thiết bị tự động hóa",
                            Name = "Thiết bị thông minh",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CPU, RAM, ổ cứng, card đồ họa",
                            Name = "Linh kiện máy tính",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ốp lưng, sạc, cáp, pin dự phòng",
                            Name = "Phụ kiện di động",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Máy in, scanner, máy chiếu, thiết bị VP",
                            Name = "Thiết bị văn phòng",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Smartwatch, fitness tracker, wearable",
                            Name = "Đồng hồ thông minh",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ProductManagement.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProductManagement.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ProductManagement.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Laptop Apple M3 chip, 16GB RAM, 512GB SSD",
                            ImgUrl = "/images/products/macbook-pro-m3.jpg",
                            Price = 4500.00m,
                            ProductName = "MacBook Pro M3 14 inch",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Laptop Dell Intel Core i7, 16GB RAM, 1TB SSD",
                            ImgUrl = "/images/products/dell-xps-13.jpg",
                            Price = 3500.00m,
                            ProductName = "Dell XPS 13 Plus",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gaming laptop AMD Ryzen 7, RTX 4060, 16GB RAM",
                            ImgUrl = "/images/products/asus-rog-strix.jpg",
                            Price = 2800.00m,
                            ProductName = "ASUS ROG Strix G15",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Máy tính bảng Apple M2, 256GB, WiFi + Cellular",
                            ImgUrl = "/images/products/ipad-pro-m2.jpg",
                            Price = 32.00m,
                            ProductName = "iPad Pro 12.9 inch M2",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "iPhone 15 Pro Max 256GB, Titanium Natural",
                            ImgUrl = "/images/products/iphone-15-pro-max.jpg",
                            Price = 3400.00m,
                            ProductName = "iPhone 15 Pro Max",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Galaxy S24 Ultra 512GB, S Pen, AI Camera",
                            ImgUrl = "/images/products/galaxy-s24-ultra.jpg",
                            Price = 3100.00m,
                            ProductName = "Samsung Galaxy S24 Ultra",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pixel 8 Pro 256GB, AI Photography, Pure Android",
                            ImgUrl = "/images/products/pixel-8-pro.jpg",
                            Price = 2500.00m,
                            ProductName = "Google Pixel 8 Pro",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Xiaomi 14 Ultra 512GB, Leica Camera, Snapdragon 8 Gen 3",
                            ImgUrl = "/images/products/xiaomi-14-ultra.jpg",
                            Price = 2200.00m,
                            ProductName = "Xiaomi 14 Ultra",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tai nghe Apple AirPods Pro, Active Noise Cancelling",
                            ImgUrl = "/images/products/airpods-pro-2.jpg",
                            Price = 6500.00m,
                            ProductName = "AirPods Pro 2nd Gen",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tai nghe over-ear Sony, chống ồn hàng đầu",
                            ImgUrl = "/images/products/sony-wh1000xm5.jpg",
                            Price = 8500.00m,
                            ProductName = "Sony WH-1000XM5",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Loa Bluetooth JBL chống nước, bass mạnh",
                            ImgUrl = "/images/products/jbl-charge-5.jpg",
                            Price = 3500.00m,
                            ProductName = "JBL Charge 5",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tai nghe Bose chống ồn, âm thanh Hi-Fi",
                            ImgUrl = "/images/products/bose-qc45.jpg",
                            Price = 7500.00m,
                            ProductName = "Bose QuietComfort 45",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Console PS5 Slim 1TB, 4K Gaming, Ray Tracing",
                            ImgUrl = "/images/products/ps5-slim.jpg",
                            Price = 14000.00m,
                            ProductName = "PlayStation 5 Slim",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Console Xbox Series X 1TB, 4K 120fps Gaming",
                            ImgUrl = "/images/products/xbox-series-x.jpg",
                            Price = 13500.00m,
                            ProductName = "Xbox Series X",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuột gaming Razer wireless, sensor Focus Pro 30K",
                            ImgUrl = "/images/products/razer-deathadder-v3.jpg",
                            Price = 3500.00m,
                            ProductName = "Razer DeathAdder V3 Pro",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bàn phím cơ gaming, OmniPoint switches",
                            ImgUrl = "/images/products/steelseries-apex-pro.jpg",
                            Price = 4500.00m,
                            ProductName = "SteelSeries Apex Pro TKL",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Máy ảnh mirrorless Canon, 24.2MP, 4K Video",
                            ImgUrl = "/images/products/canon-r6-mark2.jpg",
                            Price = 4200.00m,
                            ProductName = "Canon EOS R6 Mark II",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Máy ảnh Sony Alpha 33MP, 4K 60p, Real-time Eye AF",
                            ImgUrl = "/images/products/sony-a7-iv.jpg",
                            Price = 4800.00m,
                            ProductName = "Sony A7 IV",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Drone DJI 4K HDR, 3-axis gimbal, 45 phút bay",
                            ImgUrl = "/images/products/dji-mini-4-pro.jpg",
                            Price = 1800.00m,
                            ProductName = "DJI Mini 4 Pro",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Action camera GoPro 5.3K, HyperSmooth 6.0",
                            ImgUrl = "/images/products/gopro-hero-12.jpg",
                            Price = 1200.00m,
                            ProductName = "GoPro Hero 12 Black",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Router ASUS WiFi 6E, 6000Mbps, Mesh ready",
                            ImgUrl = "/images/products/asus-ax6000.jpg",
                            Price = 8000.00m,
                            ProductName = "ASUS AX6000 WiFi 6E",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Router TP-Link WiFi 6, 5400Mbps, OneMesh",
                            ImgUrl = "/images/products/tplink-ax73.jpg",
                            Price = 3000.00m,
                            ProductName = "TP-Link Archer AX73",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hệ thống Mesh WiFi 6, phủ sóng 500m²",
                            ImgUrl = "/images/products/netgear-orbi.jpg",
                            Price = 1200.00m,
                            ProductName = "Netgear Orbi AX6000",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Màn hình cong 34 inch, 3440x1440, USB-C",
                            ImgUrl = "/images/products/lg-ultrawide-34.jpg",
                            Price = 8000.00m,
                            ProductName = "LG UltraWide 34WP65C",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chuột wireless Logitech, 8000 DPI, USB-C",
                            ImgUrl = "/images/products/logitech-mx-master-3s.jpg",
                            Price = 2000.00m,
                            ProductName = "Logitech MX Master 3S",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bàn phím cơ wireless, hot-swap, RGB",
                            ImgUrl = "/images/products/keychron-k8-pro.jpg",
                            Price = 3000.00m,
                            ProductName = "Keychron K8 Pro",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Webcam Logitech 1080p, auto-focus, stereo audio",
                            ImgUrl = "/images/products/logitech-c920s.jpg",
                            Price = 1000.00m,
                            ProductName = "Logitech C920s Pro HD",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Loa thông minh Amazon Alexa, điều khiển giọng nói",
                            ImgUrl = "/images/products/echo-dot-5.jpg",
                            Price = 100.00m,
                            ProductName = "Amazon Echo Dot 5th Gen",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Màn hình thông minh Google 10 inch, camera",
                            ImgUrl = "/images/products/nest-hub-max.jpg",
                            Price = 6500.00m,
                            ProductName = "Google Nest Hub Max",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bộ đèn LED thông minh Philips, điều khiển màu sắc",
                            ImgUrl = "/images/products/philips-hue.jpg",
                            Price = 2800.00m,
                            ProductName = "Philips Hue White Ambiance",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CPU AMD 12 cores, 24 threads, 5.6GHz boost",
                            ImgUrl = "/images/products/amd-ryzen-9-7900x.jpg",
                            Price = 1200.00m,
                            ProductName = "AMD Ryzen 9 7900X",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Card đồ họa NVIDIA 12GB GDDR6X, DLSS 3",
                            ImgUrl = "/images/products/rtx-4070-super.jpg",
                            Price = 1800.00m,
                            ProductName = "NVIDIA RTX 4070 Super",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "RAM Corsair 32GB (2x16GB) DDR5-5600, RGB",
                            ImgUrl = "/images/products/corsair-vengeance-ddr5.jpg",
                            Price = 4000.00m,
                            ProductName = "Corsair Vengeance DDR5",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SSD NVMe Samsung 2TB, 7000MB/s read speed",
                            ImgUrl = "/images/products/samsung-980-pro.jpg",
                            Price = 5000.00m,
                            ProductName = "Samsung 980 PRO 2TB",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pin sạc dự phòng Anker 26800mAh, sạc nhanh PD",
                            ImgUrl = "/images/products/anker-powercore.jpg",
                            Price = 1000.00m,
                            ProductName = "Anker PowerCore 26800",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đế sạc không dây Belkin cho iPhone, AirPods, Apple Watch",
                            ImgUrl = "/images/products/belkin-magsafe-3in1.jpg",
                            Price = 3000.00m,
                            ProductName = "Belkin MagSafe 3-in-1",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chân máy Peak Design cho smartphone, gấp gọn",
                            ImgUrl = "/images/products/peak-design-tripod.jpg",
                            Price = 1000.00m,
                            ProductName = "Peak Design Mobile Tripod",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 11,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Máy in laser HP đen trắng, tốc độ 38 trang/phút",
                            ImgUrl = "/images/products/hp-laserjet-m404n.jpg",
                            Price = 4500.00m,
                            ProductName = "HP LaserJet Pro M404n",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 11,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Máy in phun màu Epson, in scan copy, WiFi",
                            ImgUrl = "/images/products/epson-l3250.jpg",
                            Price = 3000.00m,
                            ProductName = "Epson EcoTank L3250",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 11,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Máy chiếu BenQ WXGA 4000 lumens, HDMI",
                            ImgUrl = "/images/products/benq-mw560.jpg",
                            Price = 1200.00m,
                            ProductName = "BenQ MW560 Projector",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Apple Watch 45mm, GPS + Cellular, Always-On display",
                            ImgUrl = "/images/products/apple-watch-series-9.jpg",
                            Price = 1200.00m,
                            ProductName = "Apple Watch Series 9",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Galaxy Watch 6 44mm, Wear OS, health tracking",
                            ImgUrl = "/images/products/galaxy-watch-6.jpg",
                            Price = 8500.00m,
                            ProductName = "Samsung Galaxy Watch 6",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 12,
                            CreatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Đồng hồ thể thao Garmin, GPS, pin năng lượng mặt trời",
                            ImgUrl = "/images/products/garmin-fenix-7x.jpg",
                            Price = 1800.00m,
                            ProductName = "Garmin Fenix 7X Solar",
                            UpdatedAt = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ProductManagement.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ProductManagement.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagement.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ProductManagement.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductManagement.Models.Order", b =>
                {
                    b.HasOne("ProductManagement.Models.ApplicationUser", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProductManagement.Models.OrderItem", b =>
                {
                    b.HasOne("ProductManagement.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagement.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductManagement.Models.Product", b =>
                {
                    b.HasOne("ProductManagement.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductManagement.Models.ApplicationUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ProductManagement.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductManagement.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ProductManagement.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
