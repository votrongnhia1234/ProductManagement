@model EditUserViewModel
@{
    ViewData["Title"] = "Chỉnh sửa người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Admin/User/edit.css" />
}

<div class="edit-header">
    <div class="d-flex justify-content-between align-items-center flex-wrap">
        <div>
            <h1 class="edit-title">
                <i class="fas fa-user-edit"></i>
                Chỉnh sửa người dùng
            </h1>
            <p class="edit-subtitle">Cập nhật thông tin và phân quyền cho @Model.FullName</p>
        </div>
        <div class="header-actions">
            <a asp-action="Details" asp-route-id="@Model.Id" class="btn-header">
                <i class="fas fa-eye"></i>
                Xem chi tiết
            </a>
            <a asp-action="Index" class="btn-header">
                <i class="fas fa-arrow-left"></i>
                Quay lại
            </a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="form-card">
            <!-- User Preview -->
            <div class="user-preview">
                <div class="user-avatar-edit" id="userAvatar">
                    @(Model.FirstName?.Substring(0, 1).ToUpper() ?? "U")
                </div>
                <div class="preview-name" id="previewName">@Model.FullName</div>
                <div class="preview-email" id="previewEmail">@Model.Email</div>
                <div class="preview-roles" id="previewRoles">
                    @foreach (var role in Model.SelectedRoles)
                    {
                        <span class="role-badge role-@role.ToLower()">@role</span>
                    }
                </div>
            </div>

            <h5 class="form-section-title">
                <i class="fas fa-user-circle"></i>
                Thông tin cá nhân
            </h5>
            
            <form asp-action="Edit" method="post" id="editUserForm">
                <input type="hidden" asp-for="Id" />
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="FirstName" class="form-label">
                                <i class="fas fa-user"></i>
                                Họ<span class="required">*</span>
                            </label>
                            <input asp-for="FirstName" class="form-control" placeholder="Nhập họ của người dùng" 
                                   oninput="updatePreview()" />
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="LastName" class="form-label">
                                <i class="fas fa-user"></i>
                                Tên<span class="required">*</span>
                            </label>
                            <input asp-for="LastName" class="form-control" placeholder="Nhập tên của người dùng" 
                                   oninput="updatePreview()" />
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Email" class="form-label">
                        <i class="fas fa-envelope"></i>
                        Email<span class="required">*</span>
                    </label>
                    <input asp-for="Email" class="form-control" type="email" placeholder="Nhập địa chỉ email" 
                           oninput="updatePreview()" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Address" class="form-label">
                        <i class="fas fa-map-marker-alt"></i>
                        Địa chỉ
                    </label>
                    <textarea asp-for="Address" class="form-control" rows="3" 
                              placeholder="Nhập địa chỉ đầy đủ (tùy chọn)"></textarea>
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>

                <!-- Password Section -->
                <div class="password-section">
                    <div class="password-toggle">
                        <div>
                            <h6>Thay đổi mật khẩu</h6>
                            <p class="text-muted mb-0">Bật để cập nhật mật khẩu mới</p>
                        </div>
                        <div class="toggle-switch" id="passwordToggle" onclick="togglePasswordSection()"></div>
                    </div>
                    
                    <div class="password-fields" id="passwordFields">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="NewPassword" class="form-label">
                                        <i class="fas fa-lock"></i>
                                        Mật khẩu mới
                                    </label>
                                    <input asp-for="NewPassword" class="form-control" type="password" 
                                           placeholder="Nhập mật khẩu mới" id="newPassword" oninput="checkPasswordStrength()" />
                                    <div class="password-strength">
                                        <div class="password-strength-bar" id="passwordStrengthBar"></div>
                                    </div>
                                    <div class="password-strength-text" id="passwordStrengthText"></div>
                                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="ConfirmPassword" class="form-label">
                                        <i class="fas fa-lock"></i>
                                        Xác nhận mật khẩu
                                    </label>
                                    <input asp-for="ConfirmPassword" class="form-control" type="password" 
                                           placeholder="Nhập lại mật khẩu mới" />
                                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Roles Section -->
                <div class="roles-section">
                    <div class="roles-title">
                        <i class="fas fa-user-shield"></i>
                        Phân quyền<span class="required">*</span>
                    </div>
                    
                    <div class="row">
                        @foreach (var role in Model.AvailableRoles)
                        {
                            <div class="col-md-4 mb-3">
                                <div class="role-option @(Model.SelectedRoles.Contains(role) ? "selected" : "")" 
                                     onclick="toggleRole(this, '@role')">
                                    <div class="form-check">
                                        <input type="checkbox" name="SelectedRoles" value="@role"
                                               class="form-check-input" id="role_@role" 
                                               @(Model.SelectedRoles.Contains(role) ? "checked" : "") />
                                        <label class="form-check-label" for="role_@role">
                                            <strong>@role</strong>
                                            <span class="role-badge role-@role.ToLower()">@role</span>
                                        </label>
                                    </div>
                                    <p class="role-description">
                                        @switch (role)
                                        {
                                            case "Admin":
                                                @:Toàn quyền quản trị hệ thống
                                                break;
                                            case "Manager":
                                                @:Quản lý sản phẩm và đơn hàng
                                                break;
                                            case "Customer":
                                                @:Mua sắm và quản lý đơn hàng cá nhân
                                                break;
                                        }
                                    </p>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Status Section -->
                <div class="status-section">
                    <div class="status-toggle">
                        <div class="status-info">
                            <div class="status-icon @(Model.IsActive ? "active" : "inactive")">
                                <i class="fas fa-@(Model.IsActive ? "check" : "times")"></i>
                            </div>
                            <div class="status-text">
                                <h6>Trạng thái tài khoản</h6>
                                <p>@(Model.IsActive ? "Tài khoản đang hoạt động" : "Tài khoản bị vô hiệu hóa")</p>
                            </div>
                        </div>
                        <div class="toggle-switch @(Model.IsActive ? "active" : "")" id="statusToggle" onclick="toggleStatus()"></div>
                    </div>
                    <input type="hidden" asp-for="IsActive" id="isActiveInput" />
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn-save">
                        <i class="fas fa-save me-2"></i>Lưu thay đổi
                    </button>
                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn-cancel">
                        <i class="fas fa-times"></i>Hủy bỏ
                    </a>
                </div>
            </form>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="info-card">
            <h5 class="info-title">
                <i class="fas fa-info-circle"></i>
                Lưu ý quan trọng
            </h5>

            <div class="alert-warning">
                <h6><i class="fas fa-exclamation-triangle me-2"></i>Thay đổi thông tin:</h6>
                <ul>
                    <li>Email phải là duy nhất trong hệ thống</li>
                    <li>Thay đổi vai trò sẽ ảnh hưởng đến quyền truy cập</li>
                    <li>Vô hiệu hóa tài khoản sẽ ngăn người dùng đăng nhập</li>
                    <li>Mật khẩu mới phải đáp ứng yêu cầu bảo mật</li>
                </ul>
            </div>

            <h5 class="info-title mt-4">
                <i class="fas fa-history"></i>
                Thông tin tài khoản
            </h5>

            <div class="info-grid">
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-calendar-alt"></i>
                        Ngày tạo
                    </div>
                    <div class="info-value">@Model.CreatedAt.ToString("dd/MM/yyyy")</div>
                </div>
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-clock"></i>
                        Cập nhật cuối
                    </div>
                    <div class="info-value">@(Model.UpdatedAt?.ToString("dd/MM/yyyy") ?? "Chưa cập nhật")</div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    
    <script>
        let passwordSectionEnabled = false;
        
        function togglePasswordSection() {
            const toggle = document.getElementById('passwordToggle');
            const fields = document.getElementById('passwordFields');
            
            passwordSectionEnabled = !passwordSectionEnabled;
            
            if (passwordSectionEnabled) {
                toggle.classList.add('active');
                fields.classList.add('show');
            } else {
                toggle.classList.remove('active');
                fields.classList.remove('show');
                // Clear password fields
                document.getElementById('newPassword').value = '';
                document.querySelector('input[name="ConfirmPassword"]').value = '';
                checkPasswordStrength();
            }
        }
        
        function toggleStatus() {
            const toggle = document.getElementById('statusToggle');
            const input = document.getElementById('isActiveInput');
            const icon = document.querySelector('.status-icon');
            const text = document.querySelector('.status-text');
            
            const isActive = !toggle.classList.contains('active');
            
            if (isActive) {
                toggle.classList.add('active');
                icon.classList.remove('inactive');
                icon.classList.add('active');
                icon.innerHTML = '<i class="fas fa-check"></i>';
                text.innerHTML = '<h6>Trạng thái tài khoản</h6><p>Tài khoản đang hoạt động</p>';
                input.value = 'true';
            } else {
                toggle.classList.remove('active');
                icon.classList.remove('active');
                icon.classList.add('inactive');
                icon.innerHTML = '<i class="fas fa-times"></i>';
                text.innerHTML = '<h6>Trạng thái tài khoản</h6><p>Tài khoản bị vô hiệu hóa</p>';
                input.value = 'false';
            }
        }
        
        function toggleRole(element, role) {
            const checkbox = element.querySelector('input[type="checkbox"]');
            checkbox.checked = !checkbox.checked;
            
            if (checkbox.checked) {
                element.classList.add('selected');
            } else {
                element.classList.remove('selected');
            }
            
            updatePreview();
        }
        
        function updatePreview() {
            const firstName = document.querySelector('input[name="FirstName"]').value;
            const lastName = document.querySelector('input[name="LastName"]').value;
            const email = document.querySelector('input[name="Email"]').value;
            
            // Update avatar
            const avatar = document.getElementById('userAvatar');
            avatar.textContent = firstName ? firstName.substring(0, 1).toUpperCase() : 'U';
            
            // Update name
            const nameElement = document.getElementById('previewName');
            nameElement.textContent = firstName && lastName ? `${firstName} ${lastName}` : 'Tên người dùng';
            
            // Update email
            const emailElement = document.getElementById('previewEmail');
            emailElement.textContent = email || 'email@example.com';
            
            // Update roles
            const rolesContainer = document.getElementById('previewRoles');
            const selectedRoles = Array.from(document.querySelectorAll('input[name="SelectedRoles"]:checked'))
                .map(cb => cb.value);
            
            rolesContainer.innerHTML = '';
            selectedRoles.forEach(role => {
                const badge = document.createElement('span');
                badge.className = `role-badge role-${role.toLowerCase()}`;
                badge.textContent = role;
                rolesContainer.appendChild(badge);
            });
        }
        
        function checkPasswordStrength() {
            const password = document.getElementById('newPassword').value;
            const strengthBar = document.getElementById('passwordStrengthBar');
            const strengthText = document.getElementById('passwordStrengthText');
            
            strengthBar.className = 'password-strength-bar';
            
            if (password.length === 0) {
                strengthBar.style.width = '0';
                strengthText.textContent = '';
                return;
            }
            
            let strength = 0;
            
            if (password.length >= 6) strength += 1;
            if (password.length >= 10) strength += 1;
            if (password.match(/[a-z]/) && password.match(/[A-Z]/)) strength += 1;
            if (password.match(/[0-9]/)) strength += 1;
            if (password.match(/[^a-zA-Z0-9]/)) strength += 1;
            
            switch (strength) {
                case 0:
                case 1:
                    strengthBar.classList.add('strength-weak');
                    strengthText.textContent = 'Yếu';
                    strengthText.style.color = '#ef4444';
                    break;
                case 2:
                case 3:
                    strengthBar.classList.add('strength-fair');
                    strengthText.textContent = 'Trung bình';
                    strengthText.style.color = '#f59e0b';
                    break;
                case 4:
                    strengthBar.classList.add('strength-good');
                    strengthText.textContent = 'Tốt';
                    strengthText.style.color = '#10b981';
                    break;
                case 5:
                    strengthBar.classList.add('strength-strong');
                    strengthText.textContent = 'Mạnh';
                    strengthText.style.color = '#059669';
                    break;
            }
        }
        
        // Animate form on load
        document.addEventListener('DOMContentLoaded', function() {
            const formCard = document.querySelector('.form-card');
            const infoCard = document.querySelector('.info-card');
            
            formCard.style.opacity = '0';
            formCard.style.transform = 'translateY(20px)';
            formCard.style.transition = 'all 0.6s ease';
            
            infoCard.style.opacity = '0';
            infoCard.style.transform = 'translateY(20px)';
            infoCard.style.transition = 'all 0.6s ease 0.2s';
            
            setTimeout(() => {
                formCard.style.opacity = '1';
                formCard.style.transform = 'translateY(0)';
            }, 100);
            
            setTimeout(() => {
                infoCard.style.opacity = '1';
                infoCard.style.transform = 'translateY(0)';
            }, 300);
        });
    </script>
}