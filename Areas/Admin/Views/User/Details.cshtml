@model UserDetailsViewModel
@{
    ViewData["Title"] = "Chi tiết người dùng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/css/Admin/User/details.css" />
}

<div class="details-header">
    <div class="d-flex justify-content-between align-items-center flex-wrap">
        <div>
            <h1 class="details-title">
                <i class="fas fa-user-circle"></i>
                Chi tiết người dùng
            </h1>
            <p class="details-subtitle">Thông tin chi tiết và quản lý tài khoản</p>
        </div>
        <div class="header-actions">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn-header">
                <i class="fas fa-edit"></i>
                Chỉnh sửa
            </a>
            <a asp-action="Index" class="btn-header">
                <i class="fas fa-arrow-left"></i>
                Quay lại
            </a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <!-- User Profile Card -->
        <div class="user-profile-card">
            <div class="profile-header">
                <div class="user-avatar-large">
                    @(Model.FullName?.Substring(0, 1).ToUpper() ?? "U")
                </div>
                <div class="user-basic-info">
                    <h2>@Model.FullName</h2>
                    <div class="user-email">
                        <i class="fas fa-envelope"></i>
                        <a href="mailto:@Model.Email">@Model.Email</a>
                    </div>
                    <div class="user-status">
                        <span class="status-badge status-@(Model.IsActive ? "active" : "inactive")">
                            <i class="fas fa-@(Model.IsActive ? "check-circle" : "times-circle")"></i>
                            @(Model.IsActive ? "Hoạt động" : "Vô hiệu hóa")
                        </span>
                        <div class="role-badges">
                            @foreach (var role in Model.Roles)
                            {
                                <span class="role-badge role-@role.ToLower()">@role</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Personal Information -->
        <div class="info-section">
            <h5 class="section-title">
                <i class="fas fa-info-circle"></i>
                Thông tin cá nhân
            </h5>
            <div class="info-grid">
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-fingerprint"></i>
                        ID
                    </div>
                    <div class="info-value"><code>@Model.Id</code></div>
                </div>
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-user"></i>
                        Họ tên
                    </div>
                    <div class="info-value">@Model.FullName</div>
                </div>
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-envelope"></i>
                        Email
                    </div>
                    <div class="info-value">
                        <a href="mailto:@Model.Email">@Model.Email</a>
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-map-marker-alt"></i>
                        Địa chỉ
                    </div>
                    <div class="info-value">@(Model.Address ?? "Chưa cập nhật")</div>
                </div>
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-user-shield"></i>
                        Vai trò
                    </div>
                    <div class="info-value">
                        @foreach (var role in Model.Roles)
                        {
                            <span class="role-badge role-@role.ToLower()">@role</span>
                        }
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-toggle-on"></i>
                        Trạng thái
                    </div>
                    <div class="info-value">
                        <span class="status-badge status-@(Model.IsActive ? "active" : "inactive")">
                            <i class="fas fa-@(Model.IsActive ? "check-circle" : "times-circle")"></i>
                            @(Model.IsActive ? "Hoạt động" : "Vô hiệu hóa")
                        </span>
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-calendar-alt"></i>
                        Ngày tạo
                    </div>
                    <div class="info-value">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                </div>
                <div class="info-item">
                    <div class="info-label">
                        <i class="fas fa-sign-in-alt"></i>
                        Đăng nhập cuối
                    </div>
                    <div class="info-value">
                        @if (Model.LastLoginAt.HasValue)
                        {
                            @Model.LastLoginAt.Value.ToString("dd/MM/yyyy HH:mm")
                        }
                        else
                        {
                            <span>Chưa đăng nhập</span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <!-- Quick Actions -->
        <div class="info-section">
            <h5 class="section-title">
                <i class="fas fa-cogs"></i>
                Thao tác
            </h5>
            <div class="action-buttons">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn-action btn-edit">
                    <i class="fas fa-edit me-2"></i>Chỉnh sửa thông tin
                </a>

                <form asp-action="ToggleStatus" method="post">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit"
                        class="btn-action @(Model.IsActive ? "btn-toggle-active" : "btn-toggle-inactive")"
                        onclick="return confirm('@(Model.IsActive ? "Vô hiệu hóa" : "Kích hoạt") người dùng này?')">
                        <i class="fas fa-@(Model.IsActive ? "ban" : "check") me-2"></i>
                        @(Model.IsActive ? "Vô hiệu hóa" : "Kích hoạt")
                    </button>
                </form>

                <form asp-action="ResetPassword" method="post">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit" class="btn-action btn-reset"
                        onclick="return confirm('Reset mật khẩu cho người dùng này?')">
                        <i class="fas fa-key me-2"></i>Reset mật khẩu
                    </button>
                </form>

                <form asp-action="Delete" method="post">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit" class="btn-action btn-delete"
                        onclick="return confirm('Bạn có chắc chắn muốn xóa người dùng này? Hành động này không thể hoàn tác!')">
                        <i class="fas fa-trash me-2"></i>Xóa người dùng
                    </button>
                </form>
            </div>
        </div>

        <!-- Statistics -->
        <div class="info-section">
            <h5 class="section-title">
                <i class="fas fa-chart-bar"></i>
                Thống kê
            </h5>
            <div class="stats-card">
                <div class="stat-value">@Model.OrderCount</div>
                <p class="stat-label">Tổng đơn hàng</p>
                <a asp-area="Manager" asp-controller="Order" asp-action="Index" asp-route-searchTerm="@Model.Email"
                    class="btn-view-orders">
                    <i class="fas fa-shopping-cart"></i>Xem đơn hàng
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Animate elements on load
        document.addEventListener('DOMContentLoaded', function () {
            // Animate profile card
            const profileCard = document.querySelector('.user-profile-card');
            profileCard.style.opacity = '0';
            profileCard.style.transform = 'translateY(20px)';
            profileCard.style.transition = 'all 0.6s ease';

            setTimeout(() => {
                profileCard.style.opacity = '1';
                profileCard.style.transform = 'translateY(0)';
            }, 100);

            // Animate info sections
            const infoSections = document.querySelectorAll('.info-section');
            infoSections.forEach((section, index) => {
                section.style.opacity = '0';
                section.style.transform = 'translateY(20px)';
                section.style.transition = `all 0.6s ease ${0.2 + (index * 0.1)}s`;

                setTimeout(() => {
                    section.style.opacity = '1';
                    section.style.transform = 'translateY(0)';
                }, 300 + (index * 100));
            });

            // Animate info items
            const infoItems = document.querySelectorAll('.info-item');
            infoItems.forEach((item, index) => {
                item.style.opacity = '0';
                item.style.transform = 'translateY(10px)';
                item.style.transition = `all 0.4s ease ${0.5 + (index * 0.05)}s`;

                setTimeout(() => {
                    item.style.opacity = '1';
                    item.style.transform = 'translateY(0)';
                }, 500 + (index * 50));
            });

            // Animate action buttons
            const actionButtons = document.querySelectorAll('.btn-action');
            actionButtons.forEach((button, index) => {
                button.style.opacity = '0';
                button.style.transform = 'translateX(10px)';
                button.style.transition = `all 0.4s ease ${0.8 + (index * 0.1)}s`;

                setTimeout(() => {
                    button.style.opacity = '1';
                    button.style.transform = 'translateX(0)';
                }, 800 + (index * 100));
            });

            // Animate stats card
            const statsCard = document.querySelector('.stats-card');
            statsCard.style.opacity = '0';
            statsCard.style.transform = 'scale(0.9)';
            statsCard.style.transition = 'all 0.6s ease 1s';

            setTimeout(() => {
                statsCard.style.opacity = '1';
                statsCard.style.transform = 'scale(1)';
            }, 1000);
        });
    </script>
}