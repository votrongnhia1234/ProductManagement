@model AdminOrderManagementViewModel
@{
    ViewData["Title"] = "Quản lý đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="admin-page-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="admin-page-title">
                <i class="fas fa-shopping-cart me-2"></i>Quản lý đơn hàng
            </h1>
            <p class="admin-page-subtitle">Theo dõi và xử lý đơn hàng của khách hàng</p>
        </div>
        <div>
            <a asp-action="Export" asp-route-searchTerm="@Model.SearchTerm" asp-route-statusFilter="@Model.StatusFilter"
                class="btn btn-success">
                <i class="fas fa-download me-2"></i>Xuất Excel
            </a>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Statistics.TotalOrders</h4>
                        <p class="mb-0">Tổng đơn hàng</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-shopping-cart fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Statistics.PendingOrders</h4>
                        <p class="mb-0">Chờ xử lý</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-clock fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Statistics.ShippedOrders</h4>
                        <p class="mb-0">Đã gửi hàng</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-truck fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Statistics.TotalRevenue.ToString("C0")</h4>
                        <p class="mb-0">Doanh thu</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-dollar-sign fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter -->
<div class="admin-search-section">
    <form method="get" class="row g-3">
        <div class="col-md-4">
            <label class="form-label">Tìm kiếm</label>
            <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control"
                placeholder="Tên khách hàng, email, mã vận đơn...">
        </div>
        <div class="col-md-3">
            <label class="form-label">Trạng thái</label>
            <select name="statusFilter" class="form-select">
                <option value="">Tất cả trạng thái</option>
                <option value="0" selected="@(Model.StatusFilter == OrderStatus.Pending)">Chờ xử lý</option>
                <option value="1" selected="@(Model.StatusFilter == OrderStatus.Confirmed)">Đã xác nhận</option>
                <option value="2" selected="@(Model.StatusFilter == OrderStatus.Processing)">Đang xử lý</option>
                <option value="3" selected="@(Model.StatusFilter == OrderStatus.Shipped)">Đã gửi hàng</option>
                <option value="4" selected="@(Model.StatusFilter == OrderStatus.Delivered)">Đã giao hàng</option>
                <option value="5" selected="@(Model.StatusFilter == OrderStatus.Cancelled)">Đã hủy</option>
            </select>
        </div>
        <div class="col-md-2">
            <label class="form-label">&nbsp;</label>
            <button type="submit" class="btn btn-primary w-100">
                <i class="fas fa-search me-2"></i>Tìm kiếm
            </button>
        </div>
    </form>
</div>

<!-- Orders Table -->
<div class="admin-content-section">
    <div class="table-responsive">
        <table class="table table-hover admin-table">
            <thead>
                <tr>
                    <th><i class="fas fa-hashtag me-1"></i>Mã ĐH</th>
                    <th><i class="fas fa-user me-1"></i>Khách hàng</th>
                    <th><i class="fas fa-calendar me-1"></i>Ngày đặt</th>
                    <th><i class="fas fa-box me-1"></i>Sản phẩm</th>
                    <th><i class="fas fa-money-bill me-1"></i>Tổng tiền</th>
                    <th><i class="fas fa-info-circle me-1"></i>Trạng thái</th>
                    <th><i class="fas fa-cogs me-1"></i>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders)
                {
                    <tr>
                        <td>
                            <div class="fw-semibold">#@order.Id.ToString("D6")</div>
                            @if (!string.IsNullOrEmpty(order.TrackingNumber))
                            {
                                <small class="text-muted">@order.TrackingNumber</small>
                            }
                        </td>
                        <td>
                            <div>
                                <div class="fw-semibold">@order.CustomerName</div>
                                <small class="text-muted">@order.CustomerEmail</small>
                            </div>
                        </td>
                        <td>
                            <div>@order.OrderDate.ToString("dd/MM/yyyy")</div>
                            <small class="text-muted">@order.OrderDate.ToString("HH:mm")</small>
                        </td>
                        <td>
                            <span class="badge bg-info">@order.ItemCount sản phẩm</span>
                        </td>
                        <td>
                            <span class="fw-semibold text-success">@order.TotalAmount.ToString("C0")</span>
                        </td>
                        <td>
                            <span class="badge bg-@(GetStatusBadgeClass(order.Status))">
                                @GetStatusText(order.Status)
                            </span>
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                @* <a asp-action="Details" asp-route-id="@order.Id" *@ //tạm thời chưa xử lý
                                <a href="#""
                                       class=" btn btn-sm btn-outline-primary" title="Xem chi tiết">
                                    <i class="fas fa-eye"></i>
                                </a>
                                @if (order.Status == OrderStatus.Cancelled)
                                {
                                    <form asp-action="Delete" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@order.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger"
                                            onclick="return confirm('Bạn có chắc chắn muốn xóa đơn hàng này?')" title="Xóa">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (!Model.Orders.Any())
    {
        <div class="text-center py-5">
            <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
            <h5 class="text-muted">Không tìm thấy đơn hàng nào</h5>
            <p class="text-muted">Thử thay đổi từ khóa tìm kiếm hoặc bộ lọc</p>
        </div>
    }
</div>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <nav class="admin-pagination">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link"
                        href="@Url.Action("Index", new { page = Model.CurrentPage - 1, searchTerm = Model.SearchTerm, statusFilter = Model.StatusFilter })">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>
            }

            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                        href="@Url.Action("Index", new { page = i, searchTerm = Model.SearchTerm, statusFilter = Model.StatusFilter })">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link"
                        href="@Url.Action("Index", new { page = Model.CurrentPage + 1, searchTerm = Model.SearchTerm, statusFilter = Model.StatusFilter })">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>
}

@functions {
    string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "warning",
            OrderStatus.Confirmed => "info",
            OrderStatus.Processing => "primary",
            OrderStatus.Shipped => "info",
            OrderStatus.Delivered => "success",
            OrderStatus.Cancelled => "danger",
            OrderStatus.Returned => "secondary",
            _ => "secondary"
        };
    }

    string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Chờ xử lý",
            OrderStatus.Confirmed => "Đã xác nhận",
            OrderStatus.Processing => "Đang xử lý",
            OrderStatus.Shipped => "Đã gửi hàng",
            OrderStatus.Delivered => "Đã giao hàng",
            OrderStatus.Cancelled => "Đã hủy",
            OrderStatus.Returned => "Đã trả hàng",
            _ => "Không xác định"
        };
    }
}
