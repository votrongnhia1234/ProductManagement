@model AdminOrderManagementViewModel
@{
    ViewData["Title"] = "Quản lý đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .orders-header {
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        color: white;
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
    }
    
    .orders-header::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
        animation: rotate 25s linear infinite;
    }
    
    @@keyframes rotate {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    .orders-title {
        font-size: 2.5rem;
        font-weight: 800;
        margin-bottom: 0.5rem;
        position: relative;
        z-index: 1;
        display: flex;
        align-items: center;
        gap: 1rem;
    }
    
    .orders-subtitle {
        font-size: 1.125rem;
        opacity: 0.9;
        margin-bottom: 0;
        position: relative;
        z-index: 1;
    }
    
    .btn-export {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        position: relative;
        z-index: 1;
    }
    
    .btn-export:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
        color: white;
    }
    
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }
    
    .stat-card {
        background: var(--surface-color);
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        opacity: 0;
        transform: translateY(20px);
        animation: fadeInUp 0.6s ease forwards;
    }
    
    .stat-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }
    
    @@keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 6px;
        border-radius: 20px 20px 0 0;
    }
    
    .stat-card.total::before { background: linear-gradient(90deg, #3b82f6, #2563eb); }
    .stat-card.pending::before { background: linear-gradient(90deg, #f59e0b, #d97706); }
    .stat-card.shipped::before { background: linear-gradient(90deg, #06b6d4, #0891b2); }
    .stat-card.revenue::before { background: linear-gradient(90deg, #10b981, #059669); }
    
    .stat-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .stat-info h4 {
        font-size: 2.5rem;
        font-weight: 800;
        color: var(--dark-color);
        margin-bottom: 0.5rem;
        line-height: 1;
    }
    
    .stat-info p {
        color: var(--gray-color);
        font-weight: 600;
        margin-bottom: 0;
        font-size: 1rem;
    }
    
    .stat-icon {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        color: white;
        opacity: 0.9;
        transition: all 0.3s ease;
    }
    
    .stat-card:hover .stat-icon {
        opacity: 1;
        transform: scale(1.1);
    }
    
    .stat-card.total .stat-icon { background: linear-gradient(135deg, #3b82f6, #2563eb); }
    .stat-card.pending .stat-icon { background: linear-gradient(135deg, #f59e0b, #d97706); }
    .stat-card.shipped .stat-icon { background: linear-gradient(135deg, #06b6d4, #0891b2); }
    .stat-card.revenue .stat-icon { background: linear-gradient(135deg, #10b981, #059669); }
    
    .search-section {
        background: var(--surface-color);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .search-section:hover {
        transform: translateY(-2px);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
    }
    
    .search-title {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--dark-color);
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .search-title i {
        color: #f59e0b;
    }
    
    .form-label {
        font-weight: 600;
        color: var(--dark-color);
        margin-bottom: 0.5rem;
    }
    
    .form-control,
    .form-select {
        border: 2px solid var(--surface-dark);
        border-radius: 12px;
        padding: 0.75rem 1rem;
        background-color: var(--surface-dark);
        color: var(--dark-color);
        transition: all 0.3s ease;
    }
    
    .form-control:focus,
    .form-select:focus {
        border-color: #f59e0b;
        background-color: var(--surface-color);
        box-shadow: 0 0 0 4px rgba(245, 158, 11, 0.1);
        outline: none;
    }
    
    .btn-search {
        background: linear-gradient(135deg, #f59e0b, #d97706);
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-weight: 600;
        transition: all 0.3s ease;
        width: 100%;
    }
    
    .btn-search:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(245, 158, 11, 0.3);
    }
    
    .orders-table-section {
        background: var(--surface-color);
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin-bottom: 2rem;
    }
    
    .orders-table {
        margin-bottom: 0;
    }
    
    .orders-table thead th {
        background: var(--surface-dark);
        font-weight: 700;
        color: var(--dark-color);
        border: none;
        padding: 1.5rem 1rem;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .orders-table tbody td {
        padding: 1.5rem 1rem;
        vertical-align: middle;
        border-color: var(--surface-dark);
        transition: all 0.3s ease;
    }
    
    .orders-table tbody tr {
        transition: all 0.3s ease;
    }
    
    .orders-table tbody tr:hover {
        background-color: var(--surface-dark);
        transform: scale(1.01);
    }
    
    .order-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }
    
    .order-id {
        font-weight: 700;
        color: var(--dark-color);
    }
    
    .tracking-number {
        font-size: 0.875rem;
        color: var(--gray-color);
        font-family: monospace;
    }
    
    .customer-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }
    
    .customer-name {
        font-weight: 600;
        color: var(--dark-color);
    }
    
    .customer-email {
        font-size: 0.875rem;
        color: var(--gray-color);
    }
    
    .date-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }
    
    .date-value {
        color: var(--dark-color);
        font-weight: 500;
    }
    
    .time-value {
        font-size: 0.875rem;
        color: var(--gray-color);
    }
    
    .item-count-badge {
        background: rgba(245, 158, 11, 0.1);
        color: #d97706;
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 0.875rem;
    }
    
    .amount-value {
        font-weight: 700;
        color: var(--secondary-color);
        font-size: 1.125rem;
    }
    
    .status-badge {
        padding: 0.75rem 1.5rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .status-warning { background: rgba(245, 158, 11, 0.1); color: #d97706; }
    .status-info { background: rgba(59, 130, 246, 0.1); color: #2563eb; }
    .status-primary { background: rgba(139, 92, 246, 0.1); color: #7c3aed; }
    .status-success { background: rgba(16, 185, 129, 0.1); color: #059669; }
    .status-danger { background: rgba(239, 68, 68, 0.1); color: #dc2626; }
    .status-secondary { background: rgba(107, 114, 128, 0.1); color: #6b7280; }
    
    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }
    
    .btn-action {
        width: 36px;
        height: 36px;
        border: none;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        cursor: pointer;
        text-decoration: none;
    }
    
    .btn-view {
        background: rgba(59, 130, 246, 0.1);
        color: #3b82f6;
    }
    
    .btn-view:hover {
        background: #3b82f6;
        color: white;
        transform: scale(1.1);
    }
    
    .btn-delete {
        background: rgba(239, 68, 68, 0.1);
        color: #dc2626;
    }
    
    .btn-delete:hover {
        background: #dc2626;
        color: white;
        transform: scale(1.1);
    }
    
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: var(--gray-color);
    }
    
    .empty-state i {
        font-size: 4rem;
        margin-bottom: 1.5rem;
        opacity: 0.5;
    }
    
    .empty-state h5 {
        margin-bottom: 1rem;
        color: var(--dark-color);
    }
    
    .pagination-wrapper {
        display: flex;
        justify-content: center;
        margin-top: 2rem;
    }
    
    .pagination {
        background: var(--surface-color);
        border-radius: 12px;
        padding: 0.5rem;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
    }
    
    .page-link {
        border: none;
        color: var(--dark-color);
        padding: 0.75rem 1rem;
        margin: 0 0.25rem;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .page-link:hover {
        background: #f59e0b;
        color: white;
    }
    
    .page-item.active .page-link {
        background: #f59e0b;
        color: white;
    }
    
    @@media (max-width: 991px) {
        .orders-title {
            font-size: 2rem;
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
        
        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }
        
        .action-buttons {
            flex-direction: column;
            gap: 0.25rem;
        }
        
        .btn-action {
            width: 100%;
            height: 32px;
            border-radius: 6px;
        }
    }
    
    @@media (max-width: 768px) {
        .orders-header {
            padding: 1.5rem;
        }
        
        .orders-title {
            font-size: 1.75rem;
        }
        
        .search-section {
            padding: 1.5rem;
        }
        
        .stats-grid {
            grid-template-columns: 1fr;
        }
        
        .stat-card {
            padding: 1.5rem;
        }
        
        .orders-table thead th,
        .orders-table tbody td {
            padding: 1rem 0.5rem;
        }
    }
</style>

<div class="orders-header">
    <div class="d-flex justify-content-between align-items-center flex-wrap">
        <div>
            <h1 class="orders-title">
                <i class="fas fa-shopping-cart"></i>
                Quản lý đơn hàng
            </h1>
            <p class="orders-subtitle">Theo dõi và xử lý đơn hàng của khách hàng</p>
        </div>
        <a asp-action="Export" asp-route-searchTerm="@Model.SearchTerm" asp-route-statusFilter="@Model.StatusFilter"
           class="btn-export">
            <i class="fas fa-download"></i>
            Xuất Excel
        </a>
    </div>
</div>

<!-- Statistics Cards -->
<div class="stats-grid">
    <div class="stat-card total" style="animation-delay: 0.1s">
        <div class="stat-content">
            <div class="stat-info">
                <h4>@Model.Statistics.TotalOrders</h4>
                <p>Tổng đơn hàng</p>
            </div>
            <div class="stat-icon">
                <i class="fas fa-shopping-cart"></i>
            </div>
        </div>
    </div>
    <div class="stat-card pending" style="animation-delay: 0.2s">
        <div class="stat-content">
            <div class="stat-info">
                <h4>@Model.Statistics.PendingOrders</h4>
                <p>Chờ xử lý</p>
            </div>
            <div class="stat-icon">
                <i class="fas fa-clock"></i>
            </div>
        </div>
    </div>
    <div class="stat-card shipped" style="animation-delay: 0.3s">
        <div class="stat-content">
            <div class="stat-info">
                <h4>@Model.Statistics.ShippedOrders</h4>
                <p>Đã gửi hàng</p>
            </div>
            <div class="stat-icon">
                <i class="fas fa-truck"></i>
            </div>
        </div>
    </div>
    <div class="stat-card revenue" style="animation-delay: 0.4s">
        <div class="stat-content">
            <div class="stat-info">
                <h4>@Model.Statistics.TotalRevenue.ToString("C0")</h4>
                <p>Doanh thu</p>
            </div>
            <div class="stat-icon">
                <i class="fas fa-dollar-sign"></i>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter -->
<div class="search-section">
    <h5 class="search-title">
        <i class="fas fa-filter"></i>
        Bộ lọc & Tìm kiếm
    </h5>
    <form method="get" class="row g-3">
        <div class="col-md-5">
            <label class="form-label">Tìm kiếm</label>
            <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control"
                   placeholder="Tên khách hàng, email, mã vận đơn...">
        </div>
        <div class="col-md-4">
            <label class="form-label">Trạng thái</label>
            <select name="statusFilter" class="form-select">
                <option value="">Tất cả trạng thái</option>
                <option value="0" selected="@(Model.StatusFilter == OrderStatus.Pending)">Chờ xử lý</option>
                <option value="1" selected="@(Model.StatusFilter == OrderStatus.Confirmed)">Đã xác nhận</option>
                <option value="2" selected="@(Model.StatusFilter == OrderStatus.Processing)">Đang xử lý</option>
                <option value="3" selected="@(Model.StatusFilter == OrderStatus.Shipped)">Đã gửi hàng</option>
                <option value="4" selected="@(Model.StatusFilter == OrderStatus.Delivered)">Đã giao hàng</option>
                <option value="5" selected="@(Model.StatusFilter == OrderStatus.Cancelled)">Đã hủy</option>
            </select>
        </div>
        <div class="col-md-3">
            <label class="form-label">&nbsp;</label>
            <button type="submit" class="btn-search">
                <i class="fas fa-search me-2"></i>Tìm kiếm
            </button>
        </div>
    </form>
</div>

<!-- Orders Table -->
<div class="orders-table-section">
    <div class="table-responsive">
        <table class="table orders-table">
            <thead>
                <tr>
                    <th><i class="fas fa-hashtag me-1"></i>Mã ĐH</th>
                    <th><i class="fas fa-user me-1"></i>Khách hàng</th>
                    <th><i class="fas fa-calendar me-1"></i>Ngày đặt</th>
                    <th><i class="fas fa-box me-1"></i>Sản phẩm</th>
                    <th><i class="fas fa-money-bill me-1"></i>Tổng tiền</th>
                    <th><i class="fas fa-info-circle me-1"></i>Trạng thái</th>
                    <th><i class="fas fa-cogs me-1"></i>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders)
                {
                    <tr>
                        <td>
                            <div class="order-info">
                                <div class="order-id">#@order.Id.ToString("D6")</div>
                                @if (!string.IsNullOrEmpty(order.TrackingNumber))
                                {
                                    <div class="tracking-number">@order.TrackingNumber</div>
                                }
                            </div>
                        </td>
                        <td>
                            <div class="customer-info">
                                <div class="customer-name">@order.CustomerName</div>
                                <div class="customer-email">@order.CustomerEmail</div>
                            </div>
                        </td>
                        <td>
                            <div class="date-info">
                                <div class="date-value">@order.OrderDate.ToString("dd/MM/yyyy")</div>
                                <div class="time-value">@order.OrderDate.ToString("HH:mm")</div>
                            </div>
                        </td>
                        <td>
                            <span class="item-count-badge">@order.ItemCount sản phẩm</span>
                        </td>
                        <td>
                            <div class="amount-value">@order.TotalAmount.ToString("C0")</div>
                        </td>
                        <td>
                            <span class="status-badge status-@(GetStatusBadgeClass(order.Status))">
                                @GetStatusText(order.Status)
                            </span>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <a asp-action="Details" asp-route-id="@order.Id" class="btn-action btn-view"
                                   title="Xem chi tiết">
                                    <i class="fas fa-eye"></i>
                                </a>
                                @if (order.Status == OrderStatus.Cancelled)
                                {
                                    <form asp-action="Delete" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@order.Id" />
                                        <button type="submit" class="btn-action btn-delete"
                                                onclick="return confirm('Bạn có chắc chắn muốn xóa đơn hàng này?')" title="Xóa">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (!Model.Orders.Any())
    {
        <div class="empty-state">
            <i class="fas fa-shopping-cart"></i>
            <h5>Không tìm thấy đơn hàng nào</h5>
            <p>Thử thay đổi từ khóa tìm kiếm hoặc bộ lọc</p>
        </div>
    }
</div>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <div class="pagination-wrapper">
        <nav aria-label="Order navigation">
            <ul class="pagination">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link"
                           href="@Url.Action("Index", new { page = Model.CurrentPage - 1, searchTerm = Model.SearchTerm, statusFilter = Model.StatusFilter })">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>
                }

                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link"
                           href="@Url.Action("Index", new { page = i, searchTerm = Model.SearchTerm, statusFilter = Model.StatusFilter })">@i</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link"
                           href="@Url.Action("Index", new { page = Model.CurrentPage + 1, searchTerm = Model.SearchTerm, statusFilter = Model.StatusFilter })">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
}

@functions {
    string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "warning",
            OrderStatus.Confirmed => "info",
            OrderStatus.Processing => "primary",
            OrderStatus.Shipped => "info",
            OrderStatus.Delivered => "success",
            OrderStatus.Cancelled => "danger",
            OrderStatus.Returned => "secondary",
            _ => "secondary"
        };
    }

    string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Chờ xử lý",
            OrderStatus.Confirmed => "Đã xác nhận",
            OrderStatus.Processing => "Đang xử lý",
            OrderStatus.Shipped => "Đã gửi hàng",
            OrderStatus.Delivered => "Đã giao hàng",
            OrderStatus.Cancelled => "Đã hủy",
            OrderStatus.Returned => "Đã trả hàng",
            _ => "Không xác định"
        };
    }
}

@section Scripts {
<script>
    // Animate elements on load
    document.addEventListener('DOMContentLoaded', function() {
        // Animate search section
        const searchSection = document.querySelector('.search-section');
        searchSection.style.opacity = '0';
        searchSection.style.transform = 'translateY(20px)';
        searchSection.style.transition = 'all 0.6s ease 0.5s';
        
        setTimeout(() => {
            searchSection.style.opacity = '1';
            searchSection.style.transform = 'translateY(0)';
        }, 500);
        
        // Animate table section
        const tableSection = document.querySelector('.orders-table-section');
        tableSection.style.opacity = '0';
        tableSection.style.transform = 'translateY(20px)';
        tableSection.style.transition = 'all 0.6s ease 0.7s';
        
        setTimeout(() => {
            tableSection.style.opacity = '1';
            tableSection.style.transform = 'translateY(0)';
        }, 700);
        
        // Animate table rows
        const rows = document.querySelectorAll('.orders-table tbody tr');
        rows.forEach((row, index) => {
            row.style.opacity = '0';
            row.style.transform = 'translateY(10px)';
            row.style.transition = `all 0.4s ease ${0.9 + (index * 0.05)}s`;
            
            setTimeout(() => {
                row.style.opacity = '1';
                row.style.transform = 'translateY(0)';
            }, 900 + (index * 50));
        });
    });
</script>
}