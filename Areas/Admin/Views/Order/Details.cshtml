@model ProductManagement.Areas.Admin.Models.AdminOrderDetailsViewModel
@{
    ViewData["Title"] = "Chi tiết đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/css/Admin/Order/details.css" />
}

<div class="order-details-header">
    <div>
        <h1 class="details-title">
            <i class="fas fa-receipt"></i>
            Mã đơn hàng #@Model.Id
        </h1>
        <p class="details-subtitle">Chi tiết và quản lý đơn hàng</p>
    </div>
</div>

<nav class="breadcrumb-nav" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a asp-action="Index">Đơn hàng</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            Chi tiết đơn hàng
        </li>
    </ol>
</nav>

<div class="row">
    <div class="col-lg-8">
        <!-- Order Summary -->
        <div class="order-summary-card">
            <div class="order-header">
                <div>
                    <div class="order-id">#@Model.Id.ToString("D6")</div>
                    <div class="order-date">
                        <i class="fas fa-calendar-alt"></i>
                        @Model.OrderDate.ToString("dd/MM/yyyy HH:mm")
                    </div>
                </div>
                <div class="order-status status-@Model.Status.ToString().ToLower()">
                    <i class="fas fa-circle"></i>
                    @GetOrderStatusText(Model.Status)
                </div>
            </div>

            <!-- Customer Information -->
            <div class="customer-info-card">
                <div class="customer-header">
                    <div class="customer-avatar">
                        @(Model.Customer.FullName?.Substring(0, 1).ToUpper() ?? "U")
                    </div>
                    <div class="customer-details">
                        <h5>@Model.Customer.FullName</h5>
                        <div class="customer-email">@Model.Customer.Email</div>
                    </div>
                </div>

                <div class="shipping-address">
                    <div class="address-label">Địa chỉ giao hàng</div>
                    <div class="address-value">@Model.ShippingAddress</div>
                </div>
            </div>

            <!-- Tracking Information -->
            @if (!string.IsNullOrEmpty(Model.TrackingNumber))
            {
                <div class="tracking-info">
                    <div class="tracking-title">
                        <i class="fas fa-truck"></i>
                        Thông tin vận chuyển
                    </div>
                    <div class="tracking-number">@Model.TrackingNumber</div>
                </div>
            }

            <!-- Products List -->
            <div class="products-section">
                <div class="section-header">
                    <h4 class="section-title">
                        <i class="fas fa-box"></i>
                        Danh sách sản phẩm
                    </h4>
                </div>
                <div class="table-responsive">
                    <table class="table products-table">
                        <thead>
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Số lượng</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderItems)
                            {
                                <tr>
                                    <td class="product-name">@item.ProductName</td>
                                    <td>
                                        <span class="quantity-badge">@item.Quantity</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <!-- Total Amount -->
        <div class="total-amount-card">
            <div class="total-label">Tổng thanh toán</div>
            <div class="total-value">@Model.TotalAmount.ToString("C0")</div>
        </div>

        <!-- Status Update -->
        <div class="status-update-card">
            <h5 class="update-title">
                <i class="fas fa-edit"></i>
                Cập nhật trạng thái
            </h5>

            <form asp-action="UpdateStatus" method="post">
                <input type="hidden" name="id" value="@Model.Id" />
                <div class="status-form">
                    <div class="form-group">
                        <label class="form-label">Trạng thái đơn hàng</label>
                        <select name="status" class="form-select" id="status-select">
                            @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                            {
                                <option value="@status" selected="@(status == Model.Status)">
                                    @GetOrderStatusText(status)
                                </option>
                            }
                        </select>
                    </div>
                    <button type="submit" class="btn-update">
                        <i class="fas fa-save me-2"></i>Cập nhật
                    </button>
                </div>
                <div class="form-text">
                    <i class="fas fa-info-circle"></i>
                    Khi chọn "Đã gửi hàng", hệ thống sẽ tự động sinh mã vận đơn không trùng lặp.
                </div>
            </form>
        </div>
    </div>
</div>

@functions {
    public string GetOrderStatusText(OrderStatus status)
    {
        switch (status)
        {
            case OrderStatus.Pending: return "Chờ xác nhận";
            case OrderStatus.Confirmed: return "Đã xác nhận";
            case OrderStatus.Processing: return "Đang xử lý";
            case OrderStatus.Shipped: return "Đã gửi hàng";
            case OrderStatus.Delivered: return "Đã giao";
            case OrderStatus.Cancelled: return "Đã hủy";
            default: return status.ToString();
        }
    }
}

@section Scripts {
    <script>
        // Animate elements on load
        document.addEventListener('DOMContentLoaded', function () {
            // Animate order summary card
            const summaryCard = document.querySelector('.order-summary-card');
            summaryCard.style.opacity = '0';
            summaryCard.style.transform = 'translateY(20px)';
            summaryCard.style.transition = 'all 0.6s ease';

            setTimeout(() => {
                summaryCard.style.opacity = '1';
                summaryCard.style.transform = 'translateY(0)';
            }, 100);

            // Animate sidebar cards
            const sidebarCards = document.querySelectorAll('.col-lg-4 > div');
            sidebarCards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = `all 0.6s ease ${0.2 + (index * 0.1)}s`;

                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, 300 + (index * 100));
            });
        });
    </script>
}