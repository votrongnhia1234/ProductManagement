@model ProductManagement.Areas.Admin.Models.AdminDashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/css/Admin/Dashboard/index.css" />
}

<div class="dashboard-header">
    <div>
        <h1 class="dashboard-title">
            <i class="fas fa-tachometer-alt"></i>
            Admin Dashboard
        </h1>
        <p class="dashboard-subtitle">Tổng quan hệ thống quản lý</p>
    </div>
</div>

<!-- Statistics Cards -->
<div class="stats-grid">
    <div class="stat-card products" style="animation-delay: 0.1s">
        <div class="stat-content">
            <div class="stat-info">
                <h3>@Model.TotalProducts</h3>
                <p>Sản phẩm</p>
            </div>
            <div class="stat-icon">
                <i class="fas fa-box"></i>
            </div>
        </div>
    </div>
    <div class="stat-card categories" style="animation-delay: 0.2s">
        <div class="stat-content">
            <div class="stat-info">
                <h3>@Model.TotalCategories</h3>
                <p>Danh mục</p>
            </div>
            <div class="stat-icon">
                <i class="fas fa-tags"></i>
            </div>
        </div>
    </div>
    <div class="stat-card orders" style="animation-delay: 0.3s">
        <div class="stat-content">
            <div class="stat-info">
                <h3>@Model.TotalOrders</h3>
                <p>Đơn hàng</p>
            </div>
            <div class="stat-icon">
                <i class="fas fa-shopping-cart"></i>
            </div>
        </div>
    </div>
    <div class="stat-card revenue" style="animation-delay: 0.4s">
        <div class="stat-content">
            <div class="stat-info">
                <h3>@Model.TotalRevenue.ToString("N0")</h3>
                <p>Doanh thu ($)</p>
            </div>
            <div class="stat-icon">
                <i class="fas fa-dollar-sign"></i>
            </div>
        </div>
    </div>
</div>

<!-- Dashboard Content -->
<div class="dashboard-content">
    <!-- Recent Orders -->
    <div class="content-card">
        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-history"></i>
                Đơn hàng gần đây
            </h5>
        </div>
        <div class="table-responsive">
            <table class="table orders-table">
                <thead>
                    <tr>
                        <th>Mã ĐH</th>
                        <th>Khách hàng</th>
                        <th>Tổng tiền</th>
                        <th>Trạng thái</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.RecentOrders.Any())
                    {
                        @foreach (var order in Model.RecentOrders)
                        {
                            <tr>
                                <td class="order-id">#@order.Id.ToString("D6")</td>
                                <td class="customer-name">@order.User.FullName</td>
                                <td class="order-amount">@order.TotalAmount.ToString("C0")</td>
                                <td>
                                    <span class="status-badge status-@order.Status.ToString().ToLower()">
                                        @GetOrderStatusText(order.Status)
                                    </span>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4">
                                <div class="empty-state">
                                    <i class="fas fa-box-open"></i>
                                    <p>Không có đơn hàng nào gần đây.</p>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Top Selling Products -->
    <div class="content-card">
        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-star"></i>
                Sản phẩm bán chạy
            </h5>
        </div>
        @if (Model.TopSellingProducts.Any())
        {
            <div class="top-products-list">
                @foreach (var product in Model.TopSellingProducts)
                {
                    <div class="product-item">
                        @if (!string.IsNullOrEmpty(product.ImgUrl))
                        {
                            <img src="@product.ImgUrl" alt="@product.ProductName" class="product-image">
                        }
                        else
                        {
                            <div class="no-image">
                                <i class="fas fa-image"></i>
                            </div>
                        }
                        <div class="product-info">
                            <div class="product-name" title="@product.ProductName">@product.ProductName</div>
                            <div class="product-price">@product.Price.ToString("C0")</div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-chart-line"></i>
                <p>Chưa có dữ liệu sản phẩm bán chạy.</p>
            </div>
        }
    </div>
</div>

<!-- Charts Section -->
<div class="row">
    <div class="col-lg-6">
        <div class="content-card">
            <div class="card-header">
                <h5 class="card-title">
                    <i class="fas fa-chart-line"></i>
                    Doanh thu theo tháng
                </h5>
            </div>
            <div class="chart-container">
                <canvas id="revenueChart"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="content-card">
            <div class="card-header">
                <h5 class="card-title">
                    <i class="fas fa-chart-pie"></i>
                    Trạng thái đơn hàng
                </h5>
            </div>
            <div class="chart-container">
                <canvas id="orderStatusChart"></canvas>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetOrderStatusText(OrderStatus status)
    {
        switch (status)
        {
            case OrderStatus.Pending: return "Chờ xử lý";
            case OrderStatus.Confirmed: return "Đã xác nhận";
            case OrderStatus.Processing: return "Đang xử lý";
            case OrderStatus.Shipped: return "Đã gửi hàng";
            case OrderStatus.Delivered: return "Đã giao hàng";
            case OrderStatus.Cancelled: return "Đã hủy";
            case OrderStatus.Returned: return "Đã trả hàng";
            default: return "Không xác định";
        }
    }
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Animate elements on load
        document.addEventListener('DOMContentLoaded', function () {
            // Animate content cards
            const contentCards = document.querySelectorAll('.content-card');
            contentCards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = `all 0.6s ease ${0.5 + (index * 0.1)}s`;

                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, 500 + (index * 100));
            });

            // Revenue Chart
            const revenueCtx = document.getElementById('revenueChart').getContext('2d');
            new Chart(revenueCtx, {
                type: 'line',
                data: {
                    labels: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10', 'T11', 'T12'],
                    datasets: [{
                        label: 'Doanh thu (VNĐ)',
                        data: [12000000, 19000000, 15000000, 25000000, 22000000, 30000000, 28000000, 35000000, 32000000, 40000000, 38000000, 45000000],
                        borderColor: '#6366f1',
                        backgroundColor: 'rgba(99, 102, 241, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        pointBackgroundColor: '#6366f1',
                        pointBorderColor: '#ffffff',
                        pointBorderWidth: 2,
                        pointRadius: 6,
                        pointHoverRadius: 8
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.1)'
                            },
                            ticks: {
                                callback: function (value) {
                                    return new Intl.NumberFormat('vi-VN', {
                                        style: 'currency',
                                        currency: 'VND',
                                        minimumFractionDigits: 0
                                    }).format(value);
                                }
                            }
                        },
                        x: {
                            grid: {
                                color: 'rgba(0, 0, 0, 0.1)'
                            }
                        }
                    }
                }
            });

            // Order Status Chart
            const statusCtx = document.getElementById('orderStatusChart').getContext('2d');
            new Chart(statusCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Chờ xử lý', 'Đã xác nhận', 'Đang xử lý', 'Đã giao hàng', 'Đã hủy'],
                    datasets: [{
                        data: [15, 25, 20, 35, 5],
                        backgroundColor: [
                            '#f59e0b',
                            '#3b82f6',
                            '#8b5cf6',
                            '#10b981',
                            '#ef4444'
                        ],
                        borderWidth: 0,
                        hoverOffset: 10
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 20,
                                usePointStyle: true,
                                pointStyle: 'circle'
                            }
                        }
                    }
                }
            });
        });
    </script>
}