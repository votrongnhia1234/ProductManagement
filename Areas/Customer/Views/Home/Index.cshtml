@model CustomerHomeViewModel
@{
    ViewData["Title"] = "Trang chủ";
    Layout = "~/Areas/Customer/Views/Shared/_CustomerLayout.cshtml";
}

<style>
    .featured-section {
        background: linear-gradient(135deg, var(--surface-color) 0%, var(--surface-dark) 100%);
        border-radius: 20px;
        padding: 3rem 2rem;
        margin-bottom: 3rem;
        position: relative;
        overflow: hidden;
    }
    
    .featured-section::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(99, 102, 241, 0.05) 0%, transparent 70%);
        animation: rotate 30s linear infinite;
    }
    
    .featured-title {
        font-size: 2.5rem;
        font-weight: 800;
        text-align: center;
        margin-bottom: 3rem;
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        position: relative;
        z-index: 1;
    }
    
    .product-card {
        border: none;
        border-radius: 20px;
        overflow: hidden;
        transition: all 0.3s ease;
        background: var(--surface-color);
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        height: 100%;
    }
    
    .product-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }
    
    .product-image {
        position: relative;
        overflow: hidden;
    }
    
    .product-image img {
        transition: all 0.3s ease;
        width: 100%;
        height: 250px;
        object-fit: cover;
    }
    
    .product-card:hover .product-image img {
        transform: scale(1.1);
    }
    
    .no-image {
        background: linear-gradient(135deg, var(--surface-dark), var(--light-color));
        display: flex;
        align-items: center;
        justify-content: center;
        height: 250px;
        color: var(--gray-color);
    }
    
    .no-image i {
        opacity: 0.5;
    }
    
    .card-body {
        padding: 1.5rem;
    }
    
    .card-title {
        font-weight: 700;
        color: var(--dark-color);
        margin-bottom: 0.5rem;
        font-size: 1.125rem;
        line-height: 1.4;
    }
    
    .card-text {
        color: var(--gray-color);
        font-size: 0.875rem;
        line-height: 1.5;
    }
    
    .product-price {
        font-size: 1.5rem;
        font-weight: 800;
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    
    .btn-view-product {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .btn-view-product:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(99, 102, 241, 0.3);
        color: white;
    }
    
    .products-section {
        background: var(--surface-color);
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
    }
    
    .section-header {
        display: flex;
        justify-content: between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 1rem;
    }
    
    .section-title {
        font-size: 2rem;
        font-weight: 800;
        color: var(--dark-color);
        margin-bottom: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .search-form {
        display: flex;
        gap: 0.5rem;
        flex: 1;
        max-width: 400px;
    }
    
    .search-input {
        flex: 1;
        padding: 0.75rem 1rem;
        border: 2px solid var(--surface-dark);
        border-radius: 12px;
        background: var(--surface-dark);
        transition: all 0.3s ease;
    }
    
    .search-input:focus {
        border-color: var(--primary-color);
        background: var(--surface-color);
        box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.1);
        outline: none;
    }
    
    .search-btn {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-weight: 600;
        transition: all 0.3s ease;
    }
    
    .search-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(99, 102, 241, 0.3);
    }
    
    .category-filter {
        margin-bottom: 2rem;
    }
    
    .category-btn {
        padding: 0.75rem 1.5rem;
        border-radius: 25px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin-right: 0.75rem;
        margin-bottom: 0.75rem;
    }
    
    .category-btn.active {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(99, 102, 241, 0.3);
    }
    
    .category-btn:not(.active) {
        background: var(--surface-dark);
        color: var(--dark-color);
        border: 2px solid var(--surface-dark);
    }
    
    .category-btn:not(.active):hover {
        background: var(--primary-light);
        color: white;
        border-color: var(--primary-light);
    }
    
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: var(--surface-dark);
        border-radius: 20px;
        margin: 2rem 0;
    }
    
    .empty-state i {
        font-size: 4rem;
        color: var(--gray-color);
        margin-bottom: 1.5rem;
        opacity: 0.5;
    }
    
    .empty-state h5 {
        color: var(--dark-color);
        font-weight: 700;
        margin-bottom: 1rem;
    }
    
    .empty-state p {
        color: var(--gray-color);
        margin-bottom: 0;
    }
    
    .pagination {
        margin-top: 3rem;
    }
    
    .page-link {
        border: none;
        background: var(--surface-dark);
        color: var(--dark-color);
        padding: 0.75rem 1rem;
        margin: 0 0.25rem;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
    }
    
    .page-link:hover {
        background: var(--primary-light);
        color: white;
        transform: translateY(-2px);
    }
    
    .page-item.active .page-link {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        color: white;
        box-shadow: 0 5px 15px rgba(99, 102, 241, 0.3);
    }
    
    @@media (max-width: 991px) {
        .section-header {
            flex-direction: column;
            align-items: stretch;
        }
        
        .search-form {
            max-width: 100%;
        }
        
        .featured-title {
            font-size: 2rem;
        }
        
        .section-title {
            font-size: 1.75rem;
        }
    }
    
    @@media (max-width: 768px) {
        .featured-section {
            padding: 2rem 1rem;
        }
        
        .products-section {
            padding: 1.5rem;
        }
        
        .featured-title {
            font-size: 1.75rem;
        }
        
        .section-title {
            font-size: 1.5rem;
        }
    }
</style>

<!-- Featured Products -->
@if (Model.FeaturedProducts.Any())
{
    <section class="featured-section">
        <div class="container">
            <h2 class="featured-title">
                <i class="fas fa-star text-warning me-2"></i>Sản phẩm nổi bật
            </h2>
            <div class="row">
                @foreach (var product in Model.FeaturedProducts)
                {
                    <div class="col-lg-3 col-md-6 mb-4">
                        <div class="card product-card h-100">
                            <div class="product-image">
                                @if (!string.IsNullOrEmpty(product.ImgUrl))
                                {
                                    <img src="@product.ImgUrl" class="card-img-top" alt="@product.ProductName">
                                }
                                else
                                {
                                    <div class="no-image">
                                        <i class="fas fa-image fa-3x"></i>
                                    </div>
                                }
                            </div>
                            <div class="card-body d-flex flex-column">
                                <h6 class="card-title">@product.ProductName</h6>
                                <p class="card-text text-muted small">@product.CategoryName</p>
                                <div class="mt-auto">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="product-price">@product.Price.ToString("C0")</span>
                                        <a asp-action="ProductDetails" asp-route-id="@product.Id" class="btn-view-product">
                                            <i class="fas fa-eye"></i>
                                            <span>Xem</span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
}

<!-- Search and Filter -->
<section id="products" class="products-section">
    <div class="container">
        <div class="section-header">
            <h2 class="section-title">
                <i class="fas fa-box"></i>
                Tất cả sản phẩm
            </h2>
            <form method="get" class="search-form">
                <input type="text" name="searchTerm" value="@Model.SearchTerm" class="search-input" placeholder="Tìm kiếm sản phẩm...">
                <button type="submit" class="search-btn">
                    <i class="fas fa-search"></i>
                </button>
            </form>
        </div>

        <!-- Category Filter -->
        <div class="category-filter">
            <a href="@Url.Action("Index")" class="category-btn @(Model.CategoryFilter == null ? "active" : "")">
                <i class="fas fa-th-large"></i>
                Tất cả
            </a>
            @foreach (var category in Model.Categories)
            {
                <a href="@Url.Action("Index", new { categoryFilter = category.Id })"
                   class="category-btn @(Model.CategoryFilter == category.Id ? "active" : "")">
                    <i class="fas fa-tag"></i>
                    @category.Name
                </a>
            }
        </div>

        <!-- Products Grid -->
        <div class="row">
            @foreach (var product in Model.Products)
            {
                <div class="col-xl-3 col-lg-4 col-md-6 mb-4">
                    <div class="card product-card h-100">
                        <div class="product-image">
                            @if (!string.IsNullOrEmpty(product.ImgUrl))
                            {
                                <img src="@product.ImgUrl" class="card-img-top" alt="@product.ProductName">
                            }
                            else
                            {
                                <div class="no-image">
                                    <i class="fas fa-image fa-3x"></i>
                                </div>
                            }
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h6 class="card-title">@product.ProductName</h6>
                            <p class="card-text text-muted small">@product.CategoryName</p>
                            <p class="card-text">
                                @if (!string.IsNullOrEmpty(product.Description) && product.Description.Length > 60)
                                {
                                    @(product.Description.Substring(0, 60) + "...")
                                }
                                else
                                {
                                    @product.Description
                                }
                            </p>
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span class="product-price">@product.Price.ToString("C0")</span>
                                </div>
                                <div class="d-grid">
                                    <a asp-action="ProductDetails" asp-route-id="@product.Id" class="btn-view-product">
                                        <i class="fas fa-eye"></i>
                                        Xem chi tiết
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (!Model.Products.Any())
        {
            <div class="empty-state">
                <i class="fas fa-search"></i>
                <h5>Không tìm thấy sản phẩm nào</h5>
                <p>Thử thay đổi từ khóa tìm kiếm hoặc danh mục</p>
            </div>
        }

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav class="pagination-nav">
                <ul class="pagination justify-content-center">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, searchTerm = Model.SearchTerm, categoryFilter = Model.CategoryFilter })">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }

                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i, searchTerm = Model.SearchTerm, categoryFilter = Model.CategoryFilter })">@i</a>
                        </li>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, searchTerm = Model.SearchTerm, categoryFilter = Model.CategoryFilter })">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animate product cards on scroll
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };
            
            const observer = new IntersectionObserver(function(entries) {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, observerOptions);
            
            // Observe all product cards
            document.querySelectorAll('.product-card').forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = `all 0.6s ease ${index * 0.1}s`;
                observer.observe(card);
            });
        });
    </script>
}