@{
    ViewData["Title"] = "Thanh toán";
    Layout = "~/Areas/Customer/Views/Shared/_CustomerLayout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/css/Customer/Stripe/index.css" />
}

<div class="checkout-header">
    <div class="d-flex justify-content-between align-items-start flex-wrap">
        <div>
            <h1 class="checkout-title">
                <i class="fas fa-credit-card"></i>
                Thanh toán an toàn
            </h1>
            <p class="checkout-subtitle">Hoàn tất đơn hàng của bạn với Stripe</p>
        </div>
        <div class="security-badge">
            <i class="fas fa-shield-alt"></i>
            Bảo mật SSL
        </div>
    </div>
</div>

<a href="javascript:history.back()" class="back-button">
    <i class="fas fa-arrow-left"></i>
    Quay lại giỏ hàng
</a>

<div class="checkout-container">
    <div class="payment-form-card">
        <h2 class="form-section-title">
            <i class="fab fa-stripe"></i>
            Thanh toán với Stripe
        </h2>

        <div class="amount-display">
            <div class="amount-label">Tổng thanh toán</div>
            <div class="amount-value">$@ViewBag.Amount</div>
            <div class="amount-note">Môi trường test - Không thu phí thực tế</div>
        </div>

        <div class="stripe-info">
            <div class="stripe-logo">
                <div class="stripe-logo-text">stripe</div>
            </div>
            <ul class="stripe-features">
                <li>
                    <i class="fas fa-check-circle"></i>
                    Thanh toán an toàn với mã hóa 256-bit SSL
                </li>
                <li>
                    <i class="fas fa-check-circle"></i>
                    Hỗ trợ tất cả thẻ tín dụng và ghi nợ
                </li>
                <li>
                    <i class="fas fa-check-circle"></i>
                    Xử lý thanh toán nhanh chóng trong vài giây
                </li>
                <li>
                    <i class="fas fa-check-circle"></i>
                    Không lưu trữ thông tin thẻ trên hệ thống
                </li>
            </ul>
        </div>

        <form asp-action="CreateCheckoutSession" method="post" id="checkoutForm">
            <input type="hidden" name="amount" value="@ViewBag.Amount" />
            <button type="submit" class="payment-button" id="paymentButton">
                <span class="button-text">
                    <i class="fab fa-stripe-s"></i>
                    Thanh toán ngay
                </span>
                <div class="loading-spinner">
                    <div class="spinner"></div>
                </div>
            </button>
        </form>
    </div>

    <div class="order-summary-card">
        <h3 class="summary-title">
            <i class="fas fa-receipt"></i>
            Tóm tắt đơn hàng
        </h3>

        <div class="summary-item">
            <span class="summary-label">Tạm tính</span>
            <span class="summary-value">$@ViewBag.Amount</span>
        </div>

        <div class="summary-item">
            <span class="summary-label">Phí xử lý</span>
            <span class="summary-value">$0.00</span>
        </div>

        <div class="summary-item">
            <span class="summary-label">Thuế VAT</span>
            <span class="summary-value">$0.00</span>
        </div>

        <div class="summary-total">
            <div class="summary-item">
                <span class="summary-label">Tổng cộng</span>
                <span class="summary-value">$@ViewBag.Amount</span>
            </div>
        </div>

        <div class="security-info">
            <i class="fas fa-lock"></i>
            <div class="security-text">
                Thông tin thanh toán của bạn được bảo vệ bởi công nghệ mã hóa hàng đầu thế giới
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Animate elements on load
        document.addEventListener('DOMContentLoaded', function () {
            // Animate payment form
            const formCard = document.querySelector('.payment-form-card');
            formCard.style.opacity = '0';
            formCard.style.transform = 'translateY(20px)';
            formCard.style.transition = 'all 0.6s ease';

            setTimeout(() => {
                formCard.style.opacity = '1';
                formCard.style.transform = 'translateY(0)';
            }, 100);

            // Animate summary card
            const summaryCard = document.querySelector('.order-summary-card');
            summaryCard.style.opacity = '0';
            summaryCard.style.transform = 'translateY(20px)';
            summaryCard.style.transition = 'all 0.6s ease 0.2s';

            setTimeout(() => {
                summaryCard.style.opacity = '1';
                summaryCard.style.transform = 'translateY(0)';
            }, 300);
        });

        // Handle form submission
        document.getElementById('checkoutForm').addEventListener('submit', function (e) {
            const button = document.getElementById('paymentButton');

            // Add loading state
            button.classList.add('loading');
            button.disabled = true;

            // Add some delay to show loading state (remove in production)
            setTimeout(() => {
                // Form will submit normally after this
            }, 1000);
        });

        // Add ripple effect to payment button
        document.getElementById('paymentButton').addEventListener('click', function (e) {
            const button = this;
            const ripple = document.createElement('span');
            const rect = button.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;

            ripple.style.cssText = `
                                position: absolute;
                                width: ${size}px;
                                height: ${size}px;
                                left: ${x}px;
                                top: ${y}px;
                                background: rgba(255, 255, 255, 0.3);
                                border-radius: 50%;
                                transform: scale(0);
                                animation: ripple 0.6s ease-out;
                                pointer-events: none;
                                z-index: 1;
                            `;

            button.appendChild(ripple);

            setTimeout(() => {
                ripple.remove();
            }, 600);
        });

        // Add ripple animation
        const style = document.createElement('style');
        style.textContent = `
                            @@keyframes ripple {
                                to {
                                    transform: scale(2);
                                    opacity: 0;
                                }
                            }
                        `;
        document.head.appendChild(style);

        // Simulate real-time currency conversion (optional)
        function updateCurrency() {
            const amount = @ViewBag.Amount;
            const vndRate = 24000; // Example rate
            const vndAmount = (amount * vndRate).toLocaleString('vi-VN');

            // You can add VND display if needed
            console.log(`Amount in VND: ${vndAmount} ₫`);
        }

        // Add keyboard shortcuts
        document.addEventListener('keydown', function (e) {
            // Enter key to submit payment
            if (e.key === 'Enter' && !e.ctrlKey && !e.altKey) {
                const button = document.getElementById('paymentButton');
                if (!button.disabled) {
                    button.click();
                }
            }

            // Escape key to go back
            if (e.key === 'Escape') {
                history.back();
            }
        });
    </script>
}