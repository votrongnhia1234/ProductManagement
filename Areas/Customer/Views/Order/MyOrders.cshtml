@model ProductManagement.Areas.Customer.Models.CustomerOrderListViewModel
@using ProductManagement.Extensions
@{
    ViewData["Title"] = "Đơn hàng của tôi";
    Layout = "~/Areas/Customer/Views/Shared/_CustomerLayout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/css/Customer/Order/index.css" />
}

<div class="orders-header">
    <div class="d-flex justify-content-between align-items-center flex-wrap">
        <div>
            <h1 class="orders-title">
                <i class="fas fa-list-alt"></i>
                Đơn hàng của tôi
            </h1>
            <p class="orders-subtitle">Theo dõi trạng thái đơn hàng của bạn</p>
        </div>
        @if (Model.TotalOrders > 0)
        {
            <div class="total-badge">
                @Model.TotalOrders đơn hàng
            </div>
        }
    </div>
</div>

@if (Model.Orders.Any())
{
    @foreach (var (order, index) in Model.Orders.Select((value, i) => (value, i)))
    {
        <div class="order-card status-@GetStatusClass(order.Status)" style="animation-delay: @((index * 0.1) + 0.1)s">
            <div class="order-content">
                <div class="order-header">
                    <div>
                        <div class="order-id">#@order.Id.ToString("D6")</div>
                        <div class="order-date">
                            <i class="fas fa-calendar-alt"></i>
                            @order.OrderDate.ToString("dd/MM/yyyy HH:mm")
                        </div>
                    </div>
                    <div class="order-status status-@GetStatusClass(order.Status)">
                        <i class="fas fa-circle"></i>
                        @GetStatusText(order.Status)
                    </div>
                </div>

                <div class="order-details">
                    <div class="detail-item">
                        <div class="detail-label">
                            <i class="fas fa-money-bill-wave"></i>
                            Tổng tiền
                        </div>
                        <div class="detail-value">@order.TotalAmount.ToString("C0")</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">
                            <i class="fas fa-box"></i>
                            Sản phẩm
                        </div>
                        <div class="detail-value">@order.ItemCount</div>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(order.TrackingNumber))
                {
                    <div class="tracking-info">
                        <div class="tracking-label">Mã vận đơn:</div>
                        <div class="tracking-number">@order.TrackingNumber</div>
                    </div>
                }

                <div class="order-actions">
                    <a asp-action="Details" asp-route-id="@order.Id" class="btn-action btn-view">
                        <i class="fas fa-eye"></i>
                        Chi tiết
                    </a>
                    @if (order.Status == OrderStatus.Pending || order.Status == OrderStatus.Confirmed)
                    {
                        <form asp-action="CancelOrder" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@order.Id" />
                            <button type="submit" class="btn-action btn-cancel"
                                    onclick="return confirm('Bạn có chắc chắn muốn hủy đơn hàng này?')">
                                <i class="fas fa-times"></i>
                                Hủy đơn
                            </button>
                        </form>
                    }
                    @if(order.Status == OrderStatus.Cancelled)
                    {
                        <form asp-action="DeleteOrder" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@order.Id" />
                            <button type="submit" class="btn-action btn-delete"
                                    onclick="return confirm('Bạn có chắc chắn muốn xóa đơn hàng này?')">
                                <i class="fas fa-trash"></i>
                                Xóa
                            </button>
                        </form>
                    }

                    <a asp-controller="Cart"
                    asp-action="ExportInvoice"
                    asp-route-orderId="@order.Id"
                    class="btn-action btn-view"
                    target="_blank">
                        <i class="fas fa-file-pdf"></i> Xuất hóa đơn
                    </a>
                </div>
            </div>
        </div>
    }

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="pagination-wrapper">
            <nav aria-label="Order navigation">
                <ul class="pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MyOrders", new { page = Model.CurrentPage - 1 })">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }
                    
                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("MyOrders", new { page = i })">@i</a>
                        </li>
                    }
                    
                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MyOrders", new { page = Model.CurrentPage + 1 })">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
}
else
{
    <div class="empty-state">
        <i class="fas fa-shopping-cart"></i>
        <h4>Chưa có đơn hàng nào</h4>
        <p>Bạn chưa đặt đơn hàng nào. Hãy bắt đầu mua sắm ngay!</p>
        <a asp-area="Customer" asp-controller="Home" asp-action="Index" class="btn-shop">
            <i class="fas fa-shopping-bag"></i>
            Bắt đầu mua sắm
        </a>
    </div>
}

@functions {
    string GetStatusClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "pending",
            OrderStatus.Confirmed => "confirmed",
            OrderStatus.Processing => "processing",
            OrderStatus.Shipped => "shipped",
            OrderStatus.Delivered => "delivered",
            OrderStatus.Cancelled => "cancelled",
            _ => "pending"
        };
    }

    string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Chờ xử lý",
            OrderStatus.Confirmed => "Đã xác nhận",
            OrderStatus.Processing => "Đang xử lý",
            OrderStatus.Shipped => "Đã gửi hàng",
            OrderStatus.Delivered => "Đã giao hàng",
            OrderStatus.Cancelled => "Đã hủy",
            OrderStatus.Returned => "Đã trả hàng",
            _ => "Không xác định"
        };
    }
}

@section Scripts {
<script>
    // Animate elements on load
    document.addEventListener('DOMContentLoaded', function() {
        // Add staggered animation to order cards
        const orderCards = document.querySelectorAll('.order-card');
        orderCards.forEach((card, index) => {
            card.style.animationDelay = `${(index * 0.1) + 0.1}s`;
        });
    });
</script>
}