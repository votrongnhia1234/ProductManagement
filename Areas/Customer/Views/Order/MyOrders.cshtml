@model CustomerOrderListViewModel
@{
    ViewData["Title"] = "Đơn hàng của tôi";
    Layout = "~/Areas/Customer/Views/Shared/_CustomerLayout.cshtml";
}

<div class="container py-4">
    <div class="row">
        <div class="col-12">
            <h2 class="mb-4">
                <i class="fas fa-list-alt me-2"></i>Đơn hàng của tôi
                @if (Model.TotalOrders > 0)
                {
                    <span class="badge bg-primary">@Model.TotalOrders đơn hàng</span>
                }
            </h2>
        </div>
    </div>

    @if (Model.Orders.Any())
    {
        <div class="row">
            @foreach (var order in Model.Orders)
            {
                <div class="col-12 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <div class="row align-items-center">
                                <div class="col-md-2">
                                    <div class="fw-semibold">Đơn hàng #@order.Id.ToString("D6")</div>
                                    <small class="text-muted">@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</small>
                                </div>
                                <div class="col-md-2">
                                    <div class="fw-semibold text-primary">@order.TotalAmount.ToString("C0")</div>
                                    <small class="text-muted">@order.ItemCount sản phẩm</small>
                                </div>
                                <div class="col-md-3">
                                    <span class="order-status @GetStatusClass(order.Status)">
                                        @GetStatusText(order.Status)
                                    </span>
                                </div>
                                <div class="col-md-3">
                                    @if (!string.IsNullOrEmpty(order.TrackingNumber))
                                    {
                                        <div>
                                            <small class="text-muted">Mã vận đơn:</small><br>
                                            <code>@order.TrackingNumber</code>
                                        </div>
                                    }
                                </div>
                                <div class="col-md-2 text-end">
                                    <div class="btn-group-vertical" role="group">
                                        <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye me-1"></i>Chi tiết
                                        </a>
                                        @if (order.Status == OrderStatus.Pending || order.Status == OrderStatus.Confirmed)
                                        {
                                            <form asp-action="CancelOrder" method="post" class="d-inline">
                                                <input type="hidden" name="id" value="@order.Id" />
                                                <button type="submit" class="btn btn-sm btn-outline-danger"
                                                        onclick="return confirm('Bạn có chắc chắn muốn hủy đơn hàng này?')">
                                                    <i class="fas fa-times me-1"></i>Hủy
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav class="mt-4">
                <ul class="pagination justify-content-center">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MyOrders", new { page = Model.CurrentPage - 1 })">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }
                    
                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("MyOrders", new { page = i })">@i</a>
                        </li>
                    }
                    
                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MyOrders", new { page = Model.CurrentPage + 1 })">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-shopping-cart fa-4x text-muted mb-4"></i>
            <h4 class="text-muted mb-3">Chưa có đơn hàng nào</h4>
            <p class="text-muted mb-4">Bạn chưa đặt đơn hàng nào. Hãy bắt đầu mua sắm ngay!</p>
            <a asp-area="Customer" asp-controller="Home" asp-action="Index" class="btn btn-primary">
                <i class="fas fa-shopping-bag me-2"></i>Bắt đầu mua sắm
            </a>
        </div>
    }
</div>

@functions {
    string GetStatusClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "pending",
            OrderStatus.Confirmed => "confirmed",
            OrderStatus.Processing => "processing",
            OrderStatus.Shipped => "shipped",
            OrderStatus.Delivered => "delivered",
            OrderStatus.Cancelled => "cancelled",
            _ => "pending"
        };
    }

    string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Chờ xử lý",
            OrderStatus.Confirmed => "Đã xác nhận",
            OrderStatus.Processing => "Đang xử lý",
            OrderStatus.Shipped => "Đã gửi hàng",
            OrderStatus.Delivered => "Đã giao hàng",
            OrderStatus.Cancelled => "Đã hủy",
            OrderStatus.Returned => "Đã trả hàng",
            _ => "Không xác định"
        };
    }
}
