@model ProductManagement.Areas.Customer.Models.CustomerOrderListViewModel
@using ProductManagement.Extensions
@{
    ViewData["Title"] = "Đơn hàng của tôi";
    Layout = "~/Areas/Customer/Views/Shared/_CustomerLayout.cshtml";
}

<style>
    .orders-header {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
    }
    
    .orders-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
        animation: rotate 30s linear infinite;
    }
    
    @@keyframes rotate {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    .orders-title {
        font-size: 2.5rem;
        font-weight: 800;
        margin-bottom: 0.5rem;
        position: relative;
        z-index: 1;
        display: flex;
        align-items: center;
        gap: 1rem;
    }
    
    .orders-subtitle {
        font-size: 1.125rem;
        opacity: 0.9;
        margin-bottom: 0;
        position: relative;
        z-index: 1;
    }
    
    .total-badge {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-weight: 600;
        position: relative;
        z-index: 1;
    }
    
    .order-card {
        background: var(--surface-color);
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        margin-bottom: 1.5rem;
        overflow: hidden;
        transition: all 0.3s ease;
        position: relative;
        opacity: 0;
        transform: translateY(20px);
        animation: fadeInUp 0.6s ease forwards;
    }
    
    .order-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }
    
    @@keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .order-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 6px;
        border-radius: 20px 20px 0 0;
    }
    
    .order-card.status-pending::before { background: linear-gradient(90deg, #f59e0b, #d97706); }
    .order-card.status-confirmed::before { background: linear-gradient(90deg, #3b82f6, #2563eb); }
    .order-card.status-processing::before { background: linear-gradient(90deg, #8b5cf6, #7c3aed); }
    .order-card.status-shipped::before { background: linear-gradient(90deg, #06b6d4, #0891b2); }
    .order-card.status-delivered::before { background: linear-gradient(90deg, #10b981, #059669); }
    .order-card.status-cancelled::before { background: linear-gradient(90deg, #ef4444, #dc2626); }
    
    .order-card.status-cancelled {
        opacity: 0.7;
    }
    
    .order-content {
        padding: 2rem;
    }
    
    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
        gap: 1rem;
    }
    
    .order-id {
        font-size: 1.5rem;
        font-weight: 800;
        color: var(--dark-color);
        margin-bottom: 0.5rem;
    }
    
    .order-date {
        color: var(--gray-color);
        font-size: 0.875rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .order-status {
        padding: 0.75rem 1.5rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .status-pending { background: rgba(245, 158, 11, 0.1); color: #d97706; }
    .status-confirmed { background: rgba(59, 130, 246, 0.1); color: #2563eb; }
    .status-processing { background: rgba(139, 92, 246, 0.1); color: #7c3aed; }
    .status-shipped { background: rgba(6, 182, 212, 0.1); color: #0891b2; }
    .status-delivered { background: rgba(16, 185, 129, 0.1); color: #059669; }
    .status-cancelled { background: rgba(239, 68, 68, 0.1); color: #dc2626; }
    
    .order-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }
    
    .detail-item {
        background: var(--surface-dark);
        border-radius: 12px;
        padding: 1.5rem;
        transition: all 0.3s ease;
    }
    
    .detail-item:hover {
        background: var(--primary-light);
        color: white;
        transform: translateY(-2px);
    }
    
    .detail-label {
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--gray-color);
        margin-bottom: 0.5rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .detail-item:hover .detail-label {
        color: rgba(255, 255, 255, 0.8);
    }
    
    .detail-value {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--dark-color);
    }
    
    .detail-item:hover .detail-value {
        color: white;
    }
    
    .tracking-info {
        background: rgba(6, 182, 212, 0.1);
        border-left: 4px solid #0891b2;
        border-radius: 12px;
        padding: 1rem 1.5rem;
        margin-bottom: 1.5rem;
    }
    
    .tracking-label {
        font-size: 0.875rem;
        color: #0891b2;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }
    
    .tracking-number {
        font-family: monospace;
        font-size: 1rem;
        font-weight: 700;
        color: var(--dark-color);
        background: rgba(255, 255, 255, 0.8);
        padding: 0.5rem 1rem;
        border-radius: 8px;
        display: inline-block;
    }
    
    .order-actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }
    
    .btn-action {
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-weight: 600;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
    }
    
    .btn-view {
        background: linear-gradient(135deg, #3b82f6, #2563eb);
        color: white;
    }
    
    .btn-view:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(59, 130, 246, 0.3);
        color: white;
    }
    
    .btn-cancel {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        color: white;
    }
    
    .btn-cancel:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(239, 68, 68, 0.3);
        color: white;
    }
    
    .btn-delete {
        background: var(--surface-dark);
        color: var(--gray-color);
    }
    
    .btn-delete:hover {
        background: var(--gray-color);
        color: white;
    }
    
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: var(--surface-color);
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }
    
    .empty-state i {
        font-size: 4rem;
        color: var(--gray-color);
        margin-bottom: 1.5rem;
        opacity: 0.5;
    }
    
    .empty-state h4 {
        color: var(--dark-color);
        font-weight: 700;
        margin-bottom: 1rem;
    }
    
    .empty-state p {
        color: var(--gray-color);
        margin-bottom: 2rem;
    }
    
    .btn-shop {
        background: linear-gradient(135deg, #10b981, #059669);
        color: white;
        border: none;
        padding: 1rem 2rem;
        border-radius: 12px;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .btn-shop:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(16, 185, 129, 0.3);
        color: white;
    }
    
    .pagination-wrapper {
        display: flex;
        justify-content: center;
        margin-top: 2rem;
    }
    
    .pagination {
        background: var(--surface-color);
        border-radius: 12px;
        padding: 0.5rem;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
    }
    
    .page-link {
        border: none;
        color: var(--dark-color);
        padding: 0.75rem 1rem;
        margin: 0 0.25rem;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .page-link:hover {
        background: #10b981;
        color: white;
    }
    
    .page-item.active .page-link {
        background: #10b981;
        color: white;
    }
    
    @@media (max-width: 991px) {
        .orders-title {
            font-size: 2rem;
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
        
        .order-header {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .order-details {
            grid-template-columns: 1fr;
        }
        
        .order-actions {
            flex-direction: column;
            width: 100%;
        }
        
        .btn-action {
            width: 100%;
            justify-content: center;
        }
    }
    
    @@media (max-width: 768px) {
        .orders-header {
            padding: 1.5rem;
        }
        
        .orders-title {
            font-size: 1.75rem;
        }
        
        .order-content {
            padding: 1.5rem;
        }
    }
</style>

<div class="orders-header">
    <div class="d-flex justify-content-between align-items-center flex-wrap">
        <div>
            <h1 class="orders-title">
                <i class="fas fa-list-alt"></i>
                Đơn hàng của tôi
            </h1>
            <p class="orders-subtitle">Theo dõi trạng thái đơn hàng của bạn</p>
        </div>
        @if (Model.TotalOrders > 0)
        {
            <div class="total-badge">
                @Model.TotalOrders đơn hàng
            </div>
        }
    </div>
</div>

@if (Model.Orders.Any())
{
    @foreach (var (order, index) in Model.Orders.Select((value, i) => (value, i)))
    {
        <div class="order-card status-@GetStatusClass(order.Status)" style="animation-delay: @((index * 0.1) + 0.1)s">
            <div class="order-content">
                <div class="order-header">
                    <div>
                        <div class="order-id">#@order.Id.ToString("D6")</div>
                        <div class="order-date">
                            <i class="fas fa-calendar-alt"></i>
                            @order.OrderDate.ToString("dd/MM/yyyy HH:mm")
                        </div>
                    </div>
                    <div class="order-status status-@GetStatusClass(order.Status)">
                        <i class="fas fa-circle"></i>
                        @GetStatusText(order.Status)
                    </div>
                </div>

                <div class="order-details">
                    <div class="detail-item">
                        <div class="detail-label">
                            <i class="fas fa-money-bill-wave"></i>
                            Tổng tiền
                        </div>
                        <div class="detail-value">@order.TotalAmount.ToString("C0")</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">
                            <i class="fas fa-box"></i>
                            Sản phẩm
                        </div>
                        <div class="detail-value">@order.ItemCount</div>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(order.TrackingNumber))
                {
                    <div class="tracking-info">
                        <div class="tracking-label">Mã vận đơn:</div>
                        <div class="tracking-number">@order.TrackingNumber</div>
                    </div>
                }

                <div class="order-actions">
                    <a asp-action="Details" asp-route-id="@order.Id" class="btn-action btn-view">
                        <i class="fas fa-eye"></i>
                        Chi tiết
                    </a>
                    @if (order.Status == OrderStatus.Pending || order.Status == OrderStatus.Confirmed)
                    {
                        <form asp-action="CancelOrder" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@order.Id" />
                            <button type="submit" class="btn-action btn-cancel"
                                    onclick="return confirm('Bạn có chắc chắn muốn hủy đơn hàng này?')">
                                <i class="fas fa-times"></i>
                                Hủy đơn
                            </button>
                        </form>
                    }
                    @if(order.Status == OrderStatus.Cancelled)
                    {
                        <form asp-action="DeleteOrder" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@order.Id" />
                            <button type="submit" class="btn-action btn-delete"
                                    onclick="return confirm('Bạn có chắc chắn muốn xóa đơn hàng này?')">
                                <i class="fas fa-trash"></i>
                                Xóa
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>
    }

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="pagination-wrapper">
            <nav aria-label="Order navigation">
                <ul class="pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MyOrders", new { page = Model.CurrentPage - 1 })">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }
                    
                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("MyOrders", new { page = i })">@i</a>
                        </li>
                    }
                    
                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MyOrders", new { page = Model.CurrentPage + 1 })">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
}
else
{
    <div class="empty-state">
        <i class="fas fa-shopping-cart"></i>
        <h4>Chưa có đơn hàng nào</h4>
        <p>Bạn chưa đặt đơn hàng nào. Hãy bắt đầu mua sắm ngay!</p>
        <a asp-area="Customer" asp-controller="Home" asp-action="Index" class="btn-shop">
            <i class="fas fa-shopping-bag"></i>
            Bắt đầu mua sắm
        </a>
    </div>
}

@functions {
    string GetStatusClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "pending",
            OrderStatus.Confirmed => "confirmed",
            OrderStatus.Processing => "processing",
            OrderStatus.Shipped => "shipped",
            OrderStatus.Delivered => "delivered",
            OrderStatus.Cancelled => "cancelled",
            _ => "pending"
        };
    }

    string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Chờ xử lý",
            OrderStatus.Confirmed => "Đã xác nhận",
            OrderStatus.Processing => "Đang xử lý",
            OrderStatus.Shipped => "Đã gửi hàng",
            OrderStatus.Delivered => "Đã giao hàng",
            OrderStatus.Cancelled => "Đã hủy",
            OrderStatus.Returned => "Đã trả hàng",
            _ => "Không xác định"
        };
    }
}

@section Scripts {
<script>
    // Animate elements on load
    document.addEventListener('DOMContentLoaded', function() {
        // Add staggered animation to order cards
        const orderCards = document.querySelectorAll('.order-card');
        orderCards.forEach((card, index) => {
            card.style.animationDelay = `${(index * 0.1) + 0.1}s`;
        });
    });
</script>
}