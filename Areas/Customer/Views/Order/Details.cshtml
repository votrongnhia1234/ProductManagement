@model ProductManagement.Areas.Customer.Models.CustomerOrderDetailsViewModel
@{
    ViewData["Title"] = "Chi tiết đơn hàng";
    Layout = "~/Areas/Customer/Views/Shared/_CustomerLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Customer/Order/details.css" />
}
<div class="container my-4">
    <div class="order-details-header">
        <div class="d-flex justify-content-between align-items-center flex-wrap">
            <div>
                <h1 class="details-title">
                    <i class="fas fa-receipt"></i>
                    Chi tiết đơn hàng #@Model.Id
                </h1>
                <p class="details-subtitle">Thông tin chi tiết về đơn hàng của bạn</p>
            </div>
            <a asp-action="MyOrders" class="btn-back">
                <i class="fas fa-arrow-left"></i>
                Quay lại danh sách
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <!-- Order Summary -->
            <div class="order-summary-card">
                <div class="summary-header">
                    <div class="order-number">#@Model.Id.ToString("D6")</div>
                    <div class="order-status status-@Model.Status.ToString().ToLower()">
                        <i class="fas fa-circle"></i>
                        @GetStatusText(Model.Status)
                    </div>
                </div>

                <div class="order-info-grid">
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-calendar-alt"></i>
                            Ngày đặt hàng
                        </div>
                        <div class="info-value">@Model.OrderDate.ToString("dd/MM/yyyy HH:mm")</div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-map-marker-alt"></i>
                            Địa chỉ giao hàng
                        </div>
                        <div class="info-value">@Model.ShippingAddress</div>
                    </div>
                    @if (Model.ShippedDate != null)
                    {
                        <div class="info-item">
                            <div class="info-label">
                                <i class="fas fa-truck"></i>
                                Ngày giao hàng
                            </div>
                            <div class="info-value">@Model.ShippedDate?.ToString("dd/MM/yyyy")</div>
                        </div>
                    }
                    @if (Model.DeliveredDate != null)
                    {
                        <div class="info-item">
                            <div class="info-label">
                                <i class="fas fa-check-circle"></i>
                                Ngày nhận hàng
                            </div>
                            <div class="info-value">@Model.DeliveredDate?.ToString("dd/MM/yyyy")</div>
                        </div>
                    }
                </div>

                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <div class="info-item">
                        <div class="info-label">
                            <i class="fas fa-sticky-note"></i>
                            Ghi chú
                        </div>
                        <div class="info-value">@Model.Notes</div>
                    </div>
                }
            </div>

            @if (!string.IsNullOrEmpty(Model.TrackingNumber))
            {
                <div class="tracking-card">
                    <div class="tracking-title">
                        <i class="fas fa-shipping-fast"></i>
                        Mã vận đơn
                    </div>
                    <div class="tracking-number">@Model.TrackingNumber</div>
                </div>
            }

            <!-- Products List -->
            <div class="products-section">
                <div class="section-header">
                    <h4 class="section-title">
                        <i class="fas fa-box"></i>
                        Danh sách sản phẩm
                    </h4>
                </div>
                <div class="table-responsive">
                    <table class="table products-table">
                        <thead>
                            <tr>
                                <th>Hình ảnh</th>
                                <th>Tên sản phẩm</th>
                                <th>Số lượng</th>
                                <th>Đơn giá</th>
                                <th>Thành tiền</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderItems)
                            {
                                <tr>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.ProductImage))
                                        {
                                            <img src="@item.ProductImage" alt="@item.ProductName" class="product-image" />
                                        }
                                        else
                                        {
                                            <div class="no-image">
                                                <i class="fas fa-image"></i>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <div class="product-name">@item.ProductName</div>
                                    </td>
                                    <td>
                                        <span class="product-quantity">@item.Quantity</span>
                                    </td>
                                    <td>
                                        <div class="product-price">@item.Price.ToString("C0")</div>
                                    </td>
                                    <td>
                                        <div class="product-total">@item.TotalPrice.ToString("C0")</div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <!-- Order Total -->
            <div class="order-total-card">
                <div class="total-label">Tổng thanh toán</div>
                <div class="total-amount">@Model.TotalAmount.ToString("C0")</div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Animate elements on load
        document.addEventListener('DOMContentLoaded', function () {
            // Animate order summary card
            const summaryCard = document.querySelector('.order-summary-card');
            summaryCard.style.opacity = '0';
            summaryCard.style.transform = 'translateY(20px)';
            summaryCard.style.transition = 'all 0.6s ease';

            setTimeout(() => {
                summaryCard.style.opacity = '1';
                summaryCard.style.transform = 'translateY(0)';
            }, 100);

            // Animate tracking card
            const trackingCard = document.querySelector('.tracking-card');
            if (trackingCard) {
                trackingCard.style.opacity = '0';
                trackingCard.style.transform = 'translateY(20px)';
                trackingCard.style.transition = 'all 0.6s ease 0.2s';

                setTimeout(() => {
                    trackingCard.style.opacity = '1';
                    trackingCard.style.transform = 'translateY(0)';
                }, 300);
            }

            // Animate products section
            const productsSection = document.querySelector('.products-section');
            productsSection.style.opacity = '0';
            productsSection.style.transform = 'translateY(20px)';
            productsSection.style.transition = 'all 0.6s ease 0.3s';

            setTimeout(() => {
                productsSection.style.opacity = '1';
                productsSection.style.transform = 'translateY(0)';
            }, 400);

            // Animate total card
            const totalCard = document.querySelector('.order-total-card');
            totalCard.style.opacity = '0';
            totalCard.style.transform = 'translateY(20px)';
            totalCard.style.transition = 'all 0.6s ease 0.4s';

            setTimeout(() => {
                totalCard.style.opacity = '1';
                totalCard.style.transform = 'translateY(0)';
            }, 500);

            // Animate table rows
            const rows = document.querySelectorAll('.products-table tbody tr');
            rows.forEach((row, index) => {
                row.style.opacity = '0';
                row.style.transform = 'translateY(10px)';
                row.style.transition = `all 0.4s ease ${0.6 + (index * 0.05)}s`;

                setTimeout(() => {
                    row.style.opacity = '1';
                    row.style.transform = 'translateY(0)';
                }, 600 + (index * 50));
            });
        });
    </script>
}

@functions {
    string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Chờ xử lý",
            OrderStatus.Confirmed => "Đã xác nhận",
            OrderStatus.Processing => "Đang xử lý",
            OrderStatus.Shipped => "Đã gửi hàng",
            OrderStatus.Delivered => "Đã giao hàng",
            OrderStatus.Cancelled => "Đã hủy",
            OrderStatus.Returned => "Đã trả hàng",
            _ => "Không xác định"
        };
    }
}