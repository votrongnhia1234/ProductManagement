@model ProductManagement.Areas.Customer.Models.OrderConfirmationViewModel
@using ProductManagement.Extensions
@{
    ViewData["Title"] = "Xác nhận đơn hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Customer/Cart/confirmation.css" />
}

<div class="confirmation-container">
    <div class="container">
        <div class="success-header">
            <div class="success-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <h2 class="success-title">Đặt hàng thành công!</h2>
            <p class="success-message">Cảm ơn bạn đã tin tưởng và đặt hàng. Chúng tôi sẽ xử lý đơn hàng của bạn trong thời gian sớm nhất.</p>
        </div>

        <div class="row">
            <div class="col-lg-8">
                <div class="order-details-card">
                    <h5 class="section-title">
                        <i class="fas fa-receipt"></i>
                        Thông tin đơn hàng
                    </h5>

                    <div class="order-info-grid">
                        <div class="info-item">
                            <div class="info-label">Mã đơn hàng</div>
                            <div class="info-value order-id">#@Model.OrderId.ToString("D6")</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Ngày đặt hàng</div>
                            <div class="info-value">@Model.OrderDate.ToString("dd/MM/yyyy HH:mm")</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Trạng thái</div>
                            <div class="info-value">
                                <span class="status-badge status-@(Model.Status.ToString().ToLower())">
                                    <i class="fas fa-@(Model.Status switch {
                                        OrderStatus.Pending => "clock",
                                        OrderStatus.Confirmed => "check",
                                        OrderStatus.Processing => "cog",
                                        OrderStatus.Shipped => "truck",
                                        OrderStatus.Delivered => "check-circle",
                                        OrderStatus.Cancelled => "times-circle",
                                        _ => "clock"
                                    })"></i>
                                    @Model.Status.GetDisplayName()
                                </span>
                            </div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Tổng tiền</div>
                            <div class="info-value total-amount">@Model.TotalAmount.ToString("C0")</div>
                        </div>
                        @* <div class="info-item"></div>
                            <a asp-action="ExportInvoice" asp-route-orderId="@Model.OrderId" class="btn btn-outline-primary" target="_blank">
                                <i class="fas fa-file-pdf"></i> Xuất hóa đơn PDF
                            </a>
                        </div> *@
                    </div>

                    <div class="mb-3">
                        <div class="info-label">Địa chỉ giao hàng</div>
                        <div class="info-value">@Model.ShippingAddress</div>
                    </div>
                </div>

                <div class="order-details-card">
                    <h5 class="section-title">
                        <i class="fas fa-box"></i>
                        Chi tiết sản phẩm
                    </h5>

                    <div class="items-list">
                        @foreach (var item in Model.Items)
                        {
                            <div class="item-row">
                                <div>
                                    <div class="item-name">@item.ProductName</div>
                                    <div class="item-quantity">Số lượng: @item.Quantity</div>
                                </div>
                                <div class="item-price">@item.TotalPrice.ToString("C0")</div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="next-steps">
                    <h5>
                        <i class="fas fa-info-circle me-2"></i>
                        Bước tiếp theo
                    </h5>
                    <p>Bạn có thể theo dõi trạng thái đơn hàng trong mục "Đơn hàng của tôi". Chúng tôi sẽ gửi email thông báo khi có cập nhật về đơn hàng.</p>
                </div>
            </div>
        </div>

        <div class="action-buttons">
            <a asp-area="Customer" asp-controller="Order" asp-action="MyOrders" class="action-btn btn-primary-action">
                <i class="fas fa-list-alt"></i>
                Xem đơn hàng của tôi
            </a>
            <a asp-area="Customer" asp-controller="Home" asp-action="Index" class="action-btn btn-secondary-action">
                <i class="fas fa-shopping-bag"></i>
                Tiếp tục mua sắm
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animate info items
            const infoItems = document.querySelectorAll('.info-item');
            infoItems.forEach((item, index) => {
                item.style.opacity = '0';
                item.style.transform = 'translateY(20px)';
                item.style.transition = `all 0.6s ease ${index * 0.1}s`;
                
                setTimeout(() => {
                    item.style.opacity = '1';
                    item.style.transform = 'translateY(0)';
                }, 500 + (index * 100));
            });
            
            // Animate item rows
            const itemRows = document.querySelectorAll('.item-row');
            itemRows.forEach((row, index) => {
                row.style.opacity = '0';
                row.style.transform = 'translateX(-20px)';
                row.style.transition = `all 0.4s ease ${1 + (index * 0.1)}s`;
                
                setTimeout(() => {
                    row.style.opacity = '1';
                    row.style.transform = 'translateX(0)';
                }, 1000 + (index * 100));
            });
            
            // Animate action buttons
            const actionButtons = document.querySelectorAll('.action-btn');
            actionButtons.forEach((btn, index) => {
                btn.style.opacity = '0';
                btn.style.transform = 'translateY(20px)';
                btn.style.transition = `all 0.6s ease ${1.5 + (index * 0.2)}s`;
                
                setTimeout(() => {
                    btn.style.opacity = '1';
                    btn.style.transform = 'translateY(0)';
                }, 1500 + (index * 200));
            });
        });
    </script>
}